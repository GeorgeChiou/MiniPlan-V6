// 最後編輯 2017-3-23
// 初版

// 最後編輯 2017-5-14
// 修正 EEPROM.commit(); 與 EEPROM.h 衝突

// 最後編輯 2017-6-05
// 增加 handleGetEEPROM 傳輸 EEPROM 模式

// 最後編輯 2017-8-28
// 增加網頁對於 中文 支援指令

// 最後編輯 2019-10-17
// 因為 Adafruit_PWM_Servo_Driver_Library 版本問題，改由 Adafruit 正式版本網路下載
// PWM_Frequency = 50;


#include <SPI.h>
#include <Wire.h>
#include <Servo.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <Adafruit_PWMServoDriver.h>
#include <EEPROM.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Version
String FW_Version = "MiniPlan Firmware Version 4.40 (2019/10/17)";
String Thanks_1 = "Special Thanks : Mason Chen (Action Director)";
String Thanks_2 = "Special Thanks : Roy Chen (Programming)";
String ShowVoltage = "???V";

//  I2C Address 0x3C
#define OLED_RESET LED_BUILTIN
Adafruit_SSD1306 display(-1);

// I2C Address 0x40
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

// Servos Matrix
const int ALLMATRIX = 21;    // 0 ~ 15 Servo + GPIO12 + GPIO13 + GPIO14 + GPIO16 + Run Time + Delay Time + PWM Frequency Calibration + Voltage Calibration
const int ALLSERVOS = 20;    // 0 ~ 15 Servo + GPIO12 + GPIO13 + GPIO14 + GPIO16

// ES08MDII Pulse Traveling 700us ~ 2300us 160度
const int PWM_Frequency = 50;    // PWM frequency 50Hz
const int PWMRES_Min = 1;        // PWM Resolution 1
const int PWMRES_Max = 160;      // PWM Resolution 160
const int SERVOMIN = 145;        // 145
const int SERVOMAX = 472;        // 472

// Servo Delay Base Time
const int BASEDELAYTIME = 10;    // 10ms

// AP Password
const char WiFiAPPSK[] = "12345678";

// Voltage Detected
const int Input_Voltage = 795;       // 約 6.00V
const int Input_MinVoltage = 590;    // 約 5.90V 啟動低壓機制
int Voltage_Conter;
int Voltage_Cab = 0;
int Input_Voltage_Low = 0;
int Voltage = Input_Voltage;
int Set_Voltage = Input_Voltage;

// Servo PWM Frequency
int Set_PWM_Freq = PWM_Frequency;

// Motion Data Index
int Servo_PROGRAM;
int Servo_PROGRAM_Stack;

// Servo ID
int GPIO_ID;
int GPIO12_PWM;
int GPIO13_PWM;
int GPIO14_PWM;
int GPIO16_PWM;

// Backup Servo Value
int Running_Servo_POS [ALLMATRIX];

// Engineering model
int Engineering_Model;

// OLED Display Index
int OLED_Display_Index = 0;

// Start Web Server
ESP8266WebServer server(80);

// Start GPIO Software Servo
Servo GPIO12SERVO;
Servo GPIO13SERVO;
Servo GPIO14SERVO;
Servo GPIO16SERVO;



/*============================================================================*/
// ES08MDII - 達文西姿勢
/////////////////////////////////////////////////////    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
int Servo_Act_0 [ ] PROGMEM = {   60,      80,      50,     110,     50,     135,     50,      80,      80,     110,      25,      110,      50,      110,      80,      100,       90,       90,        90,        90,      0  };


/*============================================================================*/
// ES08MDII - 立正
/////////////////////////////////////////////////////    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
int Servo_Act_1 [ ] PROGMEM = {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,       90,       90,        90,        90,      0  };


/*============================================================================*/
// 鞠躬動作
int Servo_Prg_31_Step = 4;
int Servo_Prg_31 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     155,    115,     40,     140,     35,      105,     110,      50,      110,      80,      100,      90,        90,        90,       90,       500   },
  {   60,      65,      50,      60,      50,     155,    115,     40,     140,     35,      105,     110,      97,      110,      95,      100,      90,        90,        90,       90,       500   },
  {   60,      65,      50,      60,      50,     155,    115,     40,     140,     35,      105,     110,      97,      110,      95,      100,      90,        90,        90,       90,       1000 },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,       800   }   // 立正
};


/*============================================================================*/
// 揮手動作
int Servo_Prg_32_Step = 9;
int Servo_Prg_32 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    125,     80,      60,      75,      125,     110,      50,      110,      80,      100,      90,        60,        90,        90,      500  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,      125,     110,      50,      110,      80,      100,      90,        60,        90,        90,      300  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      60,      75,      125,     110,      50,      110,      80,      100,      90,        60,        90,        90,      300  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,      125,     110,      50,      110,      80,      100,      90,        60,        90,        90,      300  },

  {   60,      80,      50,     110,     50,      35,      85,     100,     80,      35,       30,      110,      50,      110,      80,      100,      90,       120,       90,        90,      500  },
  {   60,      80,      50,     110,     50,      35,     115,     80,      80,      35,       30,      110,      50,      110,      80,      100,      90,       120,       90,        90,      300  },
  {   60,      80,      50,     110,     50,      35,      85,     100,     80,      35,       30,      110,      50,      110,      80,      100,      90,       120,       90,        90,      300  },
  {   60,      80,      50,     110,     50,      35,     115,     80,      80,      35,       30,      110,      50,      110,      80,      100,      90,       120,       90,        90,      300  },

  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  }   // 立正
};


/*============================================================================*/
// 鋼鐵人動作
int Servo_Prg_33_Step = 8;
int Servo_Prg_33 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   50,      80,      50,     110,     45,     155,    105,    120,     40,     105,      25,      100,      50,      110,      80,       90,       90,        60,        90,        90,      300  },
  {   50,      80,      50,     110,     45,     155,    105,    120,     40,     105,      25,      100,      50,      110,      80,       90,       90,        60,        90,        90,      800  },

  {   70,      80,      50,     110,     60,     135,     55,     120,     40,      55,        5,       115,      50,      110,      80,      110,      90,       120,       90,        90,      300  },
  {   70,      80,      50,     110,     60,     135,     55,     120,     40,      55,        5,       115,      50,      110,      80,      110,      90,       120,       90,        90,      800  },

  {   60,      80,      50,     110,     50,      55,     105,    120,     40,      55,      105,     110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
  {   60,      65,      50,      95,      50,      55,     140,    120,     40,      15,      105,     110,      65,      110,      94,      100,      90,        90,        90,        90,      500  },

  {   60,      65,      50,      95,      50,      55,     140,    120,     40,      15,      105,     110,      65,      110,      94,      100,      90,        90,        90,        90,      800  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  }   // 立正
};


/*============================================================================*/
// 右邊單腳側傾動作
int Servo_Prg_34_Step = 7;
int Servo_Prg_34 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   70,      80,      50,     110,     60,     135,    105,     35,      80,      85,       25,      115,      50,      110,      80,      110,      90,        90,        90,        90,      500  },
  {   70,      80,      50,     110,     60,     135,    105,     35,      80,      85,       25,      115,      50,      110,      80,      115,      90,        90,        90,        90,      300  },
  {   70,      80,      50,     110,     60,     135,    105,     35,     140,     15,      105,     100,      50,      110,      80,      120,      90,        90,        90,        90,      500  },
  {   70,      80,      50,     110,     60,     135,    105,     35,     140,     15,      105,     100,      50,      110,      80,      120,      90,       120,       90,        90,      800  },
  {   70,      80,      50,     110,     60,     135,    105,     35,      80,      85,       25,      115,      50,      110,      80,      115,      90,       120,       90,        90,      600  },
  {   70,      80,      50,     110,     60,     135,    105,     35,      80,      85,       25,      115,      50,      110,      80,      110,      90,        90,        90,        90,      500  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  }   // 立正
};


/*============================================================================*/
// 左邊單腳平衡動作
int Servo_Prg_35_Step = 12;
int Servo_Prg_35 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   50,      80,      50,     110,     45,     135,     50,      80,      80,     110,      25,      100,      50,      110,      80,       90,       90,        90,        90,        90,      500  },
  {   50,      80,      50,     110,     45,      85,      50,      80,      80,     110,      75,      100,      50,      110,      85,       90,       90,        90,        90,        90,      300  },
  {   45,      80,      50,     110,     60,      85,      50,      80,      80,     110,      75,      100,      50,      110,      85,       90,       90,        90,        90,        90,      500  },
  {   45,      80,      50,     110,     60,      85,      50,      80,      80,     110,      75,      100,      50,      110,      85,       90,       90,        90,        90,        90,      600  },

  {   45,      60,      50,      50,      60,      85,      50,      80,      80,     110,      75,      100,      50,      110,      85,       90,       90,        90,        90,        90,      900  },
  {   45,      60,      50,      50,      60,      85,      30,      80,      80,     130,      75,      100,      50,      110,      85,       90,       90,        60,        90,        90,      500  },
  {   45,      60,      50,      50,      60,      85,      70,      80,      80,      90,       75,      100,      50,      110,      85,       90,       90,       120,       90,        90,      500  },
  {   45,      60,      50,      50,      60,      85,      30,      80,      80,     130,      75,      100,      50,      110,      85,       90,       90,        60,        90,        90,      500  },
  {   45,      60,      50,      50,      60,      85,      70,      80,      80,      90,       75,      100,      50,      110,      85,       90,       90,       120,       90,        90,      500  },
  {   45,      60,      50,      50,      60,      85,      50,      80,      80,     110,      75,      100,      50,      110,      85,       90,       90,        90,        90,        90,      500  },
  {   45,      80,      50,     110,     60,      85,      50,      80,      80,     110,      75,      100,      50,      110,      85,       90,       90,        90,        90,        90,      800  },

  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  }   // 立正
};


/*============================================================================*/
// 暖身動作
int Servo_Prg_36_Step = 12;
int Servo_Prg_36 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,     95,      20,     140,     65,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  },
  {   70,      80,      50,     110,     60,     135,     95,      20,      80,     115,      25,      115,      50,      110,      80,      110,      90,        60,        90,        90,      800  },
  {   70,      80,      50,     110,     60,     135,     95,      20,      80,     115,      25,      115,      50,      110,      80,      110,      90,        60,        90,        90,      500  },
  {   50,      80,      50,     110,     45,     135,     45,      80,     140,     65,       25,      100,      50,      110,      80,       90,       90,       120,       90,        90,      800  },
  {   50,      80,      50,     110,     45,     135,     45,      80,     140,     65,       25,      100,      50,      110,      80,       90,       90,       120,       90,        90,      500  },
  {   60,      80,      50,     110,     50,     135,     95,      20,     140,     65,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
  {   60,     107,    115,     67,      50,      50,     125,     80,      80,      40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      800  },
  {   60,     107,    115,     67,      50,      50,     125,     80,      80,      40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      300  },
  {   60,      80,      50,     110,     50,     135,     95,      20,     140,     65,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
  {   60,     107,    115,     67,      50,      50,     125,     80,      80,      40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      800  },
  {   60,     107,    115,     67,      50,      50,     125,     80,      80,      40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      300  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  }   // 立正
};


/*============================================================================*/
// 拍手動作
int Servo_Prg_37_Step = 10;
int Servo_Prg_37 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      50    },  // 1
  {   60,      80,      50,     110,     50,      63,     125,     80,      80,      35,      100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      450  },  // 2
  {   60,      80,      50,     110,     50,      63,     125,     34,     126,     35,      100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      150  },  // 3

  {   60,      80,      50,     110,     50,      63,     155,     34,     126,      5,       100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      250  },  // 4
  {   60,      80,      50,     110,     50,      63,     135,     34,     126,     25,      100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      250  },  // 5

  {   60,      80,      50,     110,     50,      63,     155,     34,     126,      5,       100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      250  },  // 4
  {   60,      80,      50,     110,     50,      63,     135,     34,     126,     25,      100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      250  },  // 5

  {   60,      80,      50,     110,     50,      63,     155,     34,     126,      5,       100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      250  },  // 4
  {   60,      80,      50,     110,     50,      63,     135,     34,     126,     25,      100,     110,      50,      110,      80,      100,      90,        90,        90,        90,      250  },  // 5

  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  }   // 立正
};


/*============================================================================*/
// 妖怪手錶動作
int Servo_Prg_38_Step = 60;
int Servo_Prg_38 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,      60,     125,     15,     150,     40,      105,     110,      50,      110,      80,      100,      90,        90,        90,        90,      300  },
  {   60,     107,    115,     67,      50,      60,     125,     15,     150,     40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      300  },
  {   60,      80,      50,     110,     50,      60,     125,     15,     150,     40,      105,     110,      50,      110,      80,      100,      90,        90,        90,        90,      300  },
  {   60,     107,    115,     67,      50,      60,     125,     15,     150,     40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      300  },
  {   60,      80,      50,     110,     50,      60,     125,     15,     150,     40,      105,     110,      50,      110,      80,      100,      90,        90,        90,        90,      300  },
  {   60,     107,    115,     67,      50,      60,     125,     15,     150,     40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      300  },
  {   60,      80,      50,     110,     50,      60,     125,     15,     150,     40,      105,     110,      50,      110,      80,      100,      90,        90,        90,        90,      300  },
  {   60,     107,    115,     67,      50,      60,     125,     15,     150,     40,      105,     110,      90,       45,       53,      100,      90,        90,        90,        90,      300  },
  {   60,      80,      50,     110,     50,      60,     125,     15,     150,     40,      105,     110,      50,      110,      80,      100,      90,        90,        90,        90,      200  },
  {   60,      80,      50,     110,     50,      85,     125,     80,      80,      35,       75,      110,      50,      110,      80,      100,      90,        90,        90,        90,      100  },

  {   65,      60,      65,      70,      55,      45,     125,     80,      80,      75,      135,     105,      60,       75,       50,       95,       90,        90,        90,        90,      450  },
  {   60,      80,      50,     110,     50,      85,     125,     80,      80,      35,       75,      110,      50,      110,      80,      100,      90,        90,        90,        90,      100  },
  {   70,     100,     60,     120,     55,      40,      85,      80,      80,      35,       25,      105,      90,       75,       85,       95,       90,        90,        90,        90,      450  },
  {   60,     107,    115,     62,      50,      85,     125,     80,      80,      35,       75,      110,      95,       45,       53,      100,      90,        90,        90,        90,      200  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      400  },
  {   60,     107,    115,     62,      50,      85,     125,     80,      80,      35,       75,      110,      95,       45,       53,      100,      90,        90,        90,        90,      200  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      400  },
  {   60,     107,    115,     62,      50,      85,     125,     80,      80,      35,       75,      110,      95,       45,       53,      100,      90,        90,        90,        90,      200  },
  {   60,      80,      50,     110,     50,      45,     125,     80,      80,      75,      135,      95,       50,      110,      80,       85,       90,        90,        90,        90,      400  },
  {   60,      80,      50,     110,     50,      85,     125,     80,      80,      35,       75,      110,      50,      110,      80,      100,      90,        90,        90,        90,      100  },

  {   60,      80,      50,     110,     50,      40,      85,      80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      450  },
  {   60,      80,      50,     110,     50,      85,     125,     80,      80,      35,       75,      110,      50,      110,      80,      100,      90,        90,        90,        90,      100  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   60,      80,      50,     110,     50,      85,     125,     80,      80,      35,       75,      110,      50,      110,      80,      100,      90,        90,        90,        90,      100  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   65,      80,      50,     110,     58,      85,     125,     80,      80,      35,       75,      102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },

  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      400  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      50,      95,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      400  },
  {   65,      80,      50,     110,     58,      40,      55,     100,     80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      400  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      50,      95,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },

  {   65,      80,      50,     110,     58,      40,      55,     100,     80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   65,      80,      50,     110,     58,      85,     125,     80,      80,      35,       75,      102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },

  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      40,     125,     15,     140,     35,       85,      102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      75,     125,     15,     140,     35,      120,     102,      50,      110,      80,       95,       90,        90,        90,        90,      300  },
  {   65,      80,      50,     110,     58,      85,     125,     80,      80,      35,       75,      102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   65,      80,      50,     110,     58,      40,     125,     80,      80,      35,      125,     102,      50,      110,      80,       95,       90,        90,        90,        90,      450  },
  {   60,      80,      50,     110,     50,      45,     115,     20,     150,     65,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
  {   60,      80,      50,     110,     50,      85,     125,     80,      80,      35,       75,      110,      50,      110,      80,      100,      90,        90,        90,        90,      400  },
  {   60,      80,      50,     110,     50,     135,     95,      20,     140,     85,      125,     110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      800  }   // 立正
};


/*============================================================================*/
// 伏地挺身動作
int Servo_Prg_39_1_Step = 8;
int Servo_Prg_39_1 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    130,     80,      80,      30,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,       550  },
  {   70,      80,      50,     110,     60,     135,    120,     80,      80,      40,       25,      115,      50,      110,      80,      105,      90,        90,        90,       90,       550  },
  {   70,      80,      50,     110,     60,     116,    120,     80,      80,      40,       45,      105,      50,      110,      80,      120,      90,        90,        90,       90,       550  },
  {   40,     108,     65,     130,     60,      97,     121,     73,      83,      36,       66,      108,      99,       95,       91,      120,      90,        90,        90,       90,       550  },
  {   52,      76,      45,     130,     50,      71,     136,     76,      81,      29,       86,      110,     129,      99,      105,     115,      90,        90,        83,       90,       600  },
  {   59,      45,      45,     100,     63,      61,     136,     81,      81,      24,       96,      110,     129,     113,      97,      120,      71,        90,        63,       90,       650  },
  {   91,     132,    111,     50,      50,      56,     136,     76,      83,      26,      101,     110,     129,     106,      77,      120,      59,        90,        63,       90,       250  },
  {   78,     139,    119,     40,      50,      56,     136,     73,      83,      26,      101,     110,     133,      85,       48,      115,      71,        90,        70,       90,       300  },
  {   60,     139,    119,     40,      50,      56,     136,     73,      81,      26,      101,     110,     117,      42,       20,      100,      90,        90,        90,       90,       600  }
};

int Servo_Prg_39_2_Step = 2;
int Servo_Prg_39_2 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,     132,     40,     123,     50,      47,      74,       5,      160,     87,      116,     110,      38,      120,      29,      100,      90,        90,        90,       90,       450  },
  {   60,     123,     40,     123,     50,      68,     143,     74,      86,      18,       93,      110,      38,      120,      38,      100,      90,        90,        90,       90,       450  }
};

int Servo_Prg_39_3_Step = 7;
int Servo_Prg_39_3 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,     139,    119,     40,      50,      56,     136,     73,      81,      26,      101,     110,     117,      42,       20,      100,      90,        90,        90,       90,       650 },
  {   78,     139,    119,     40,      50,      56,     136,     73,      83,      26,      101,     110,     133,      85,       48,      115,      61,        90,        70,       90,       500 },
  {   91,     115,    111,     30,      50,      56,     136,     76,      83,      26,      101,     110,     145,     106,      93,      117,      59,        90,        63,       90,       500 },
  {   59,      80,      75,      90,      63,      61,     136,     81,      81,      24,       96,      110,     135,     113,      92,      117,      58,        90,        66,       90,       600 },
  {   55,      76,      90,      90,      50,      71,     136,     76,      81,      29,       86,      115,     135,     105,     105,     118,      70,        90,        83,       90,       650 },
  {   52,     108,     70,      90,      58,      97,     121,     73,      83,      36,       66,      110,      99,       95,       91,      113,      90,        90,        90,       90,       700 },
  {   60,      80,      50,     110,     50,     135,    130,     80,      80,      30,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,       700 }
};


/*============================================================================*/
// 太極拳動作
int Servo_Prg_40_Step = 56;
int Servo_Prg_40 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    130,     80,      80,      30,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      550   },  //  1
  {   72,      80,      50,     110,     62,     135,    130,     80,      80,      30,       25,      116,      50,      110,      80,      108,      90,        90,        90,        90,      1000 },  //  2
  {   66,      80,      50,     110,     56,     135,    130,     80,      80,      30,       25,      104,      50,      110,      80,       94,       90,        90,        90,        90,      1000 },  //  3
  /*
    {   66,      80,      50,     110,     56,      45,     130,     80,      80,      30,      115,     104,      50,      110,      80,       94,       90,        90,        90,        90,      2975 },  //  4
    {   66,      80,      50,     110,     56,      45,     130,     80,      80,      30,      115,     104,      50,      110,      80,       94,       90,        90,        90,        90,      1275 },  //  5
    {   66,      80,      58,     102,     56,      93,     130,     62,      98,      30,       67,      104,      58,      102,      80,       94,       90,        90,        90,        90,      850   },  //  6
    {   66,      80,      58,     102,     56,     135,    130,     80,      80,      30,       25,      104,      58,      102,      80,       94,       90,        90,        90,        90,      850   },  //  7
    {   60,      80,      58,     102,     50,      85,     116,     48,      80,      70,       95,      104,      58,      102,      80,       94,       90,        90,        90,        90,      850   },  //  8
    {   58,      80,      58,     102,     48,      45,     116,     36,      80,      70,      145,     100,      58,      102,      80,       90,       90,        90,        90,        90,      8`50   },  //  9
    {   58,      80,      58,     102,     48,      45,     116,     36,      80,      30,      145,     100,      58,      102,      80,       90,       90,        90,        90,        90,      680   },  //  10

    {   66,      80,      58,     102,     56,      65,     130,     20,     120,     30,      125,     104,      58,      102,      80,       94,       90,        90,        90,        90,      850   },  //  11
    {   66,      80,      58,     102,     56,      75,     124,     46,     110,     30,       99,      104,      58,      102,      80,       94,       90,        90,        90,        90,      850   },  //  12
    {   70,      80,      58,     102,     60,      95,     108,     80,      84,      30,      115,     110,      58,      102,      80,      100,      88,        90,        88,        90,      850   },  //  13
    {   70,      80,      58,     102,     60,      61,      98,      80,      98,      30,      115,     110,      58,      102,      80,      100,      90,        90,        90,        90,      850   },  //  14
    {   70,      80,      58,     102,     60,      15,     124,     56,      84,      30,      115,     110,      58,      102,      80,      100,      88,        90,        88,        90,      1000 },  //  15
    {   66,      80,      58,     102,     56,      35,     130,     40,     140,     30,       95,      104,      58,      102,      80,       94,       90,        90,        90,        90,      850   },  //  16
    {   66,      80,      58,     102,     56,      41,     138,     56,     116,     30,      105,     104,      58,      102,      80,       94,       90,        90,        90,        90,      700   },  //  17
    {   66,      80,      58,     102,     56,      45,     130,     80,     140,     30,       65,      114,      58,      102,      80,      108,      90,        90,        90,        90,      600   },  //  18
    {   66,      80,      74,      86,      60,      55,     130,     36,     106,     48,       97,      120,      58,      102,      80,      114,      58,        90,        90,        90,      600   },  //  19
    {   66,      58,      94,      64,      60,      95,     122,     20,     106,     48,      145,     120,      58,      102,      80,      114,      58,        90,        90,        90,      600   },  //  20

    {   66,      78,      94,      50,      60,      95,     106,     38,     124,     32,      145,     120,      58,      102,      80,      116,      22,        90,       106,       90,      500   },  //  21
    {   66,      72,      86,      62,      60,      83,     128,     54,     132,     32,      105,     100,      70,       70,       60,       84,       34,        90,        94,        90,      850   },  //  22
    {   66,      72,      86,      62,      60,      83,     128,     80,     132,     32,      117,     100,      70,       70,       60,       84,       70,        90,        96,        90,      680   },  //  23
    {   66,      72,      86,      62,      60,      91,     128,     66,      80,      20,      117,      74,       68,       84,       70,       72,       90,        90,       150,       90,      510   },  //  24
    {   66,      72,      86,      62,      60,      91,     128,     80,     110,     20,      117,      74,       68,       84,       70,       72,       90,        90,       150,       90,      425   },  //  25
    {   66,      72,      86,      62,      60,      83,     128,     54,     132,     32,      105,     100,      70,       70,       60,       84,       78,        90,       116,       90,      850   },  //  26
    {   66,      72,      86,      64,      60,      83,     128,     54,     132,     32,      105,     116,      90,       50,       60,      108,      88,        90,       116,       90,      850   },  //  27
    {   70,      66,      66,      78,      60,      75,     120,     54,     132,     32,      105,     120,      70,       80,       70,      114,      88,        90,        92,        90,      680   },  //  28
    {   46,      90,      80,      90,      40,      45,     128,     28,     106,     40,       85,      100,      82,       94,       94,       88,       70,        90,        70,        90,      680   },  //  29
    {   46,      80,      58,     102,     40,      59,     112,     54,     124,     30,       65,      100,      74,       86,       80,       94,       90,        90,       130,       90,      425   },  //  30

    {   46,      80,      58,     102,     40,      15,     112,     54,     140,     38,       65,      102,      96,       66,      102,      94,       90,        90,       132,       90,      600   },  //  31
    {   44,      80,      58,     102,     40,      15,     128,     36,     116,     54,       65,      100,     114,      66,       82,       94,       74,        90,       154,       90,      425   },  //  32
    {   44,      80,      70,      90,      40,      35,     128,     28,     106,     54,       85,      100,     114,     112,      88,       94,      100,       90,       162,       90,      680   },  //  33
    {   76,     100,     90,      90,      60,      55,     128,     28,     106,     32,       77,      100,      98,       74,       88,       94,       84,        90,       140,       90,      680   },  //  34
    {   76,     100,     90,      90,      60,      43,     128,     28,      80,      32,       77,      100,      98,       74,       88,       94,       76,        90,       110,       90,      340   },  //  35
    {   88,      90,      76,      92,      86,      43,     140,     80,      94,      32,       69,      100,      98,       74,       88,       94,       64,        90,       110,       90,      425   },  //  36
    {   88,      90,      76,      92,      86,      43,     140,     50,      80,      32,       69,      100,      98,       74,       88,       94,       40,        90,        98,        90,      425   },  //  37
    {   76,     100,     90,      90,      60,      55,     128,     28,     106,     32,       77,      100,      98,       74,       88,       94,       58,        90,        94,        90,      425   },  //  38
    {   68,     100,     90,      90,      56,      55,     128,     60,     106,    106,     115,     100,      98,       74,       88,       92,       78,        90,       106,       90,      425   },  //  39
    {   70,     100,     90,      90,      60,      65,      68,      72,     100,     50,      135,     100,      70,       70,       60,       90,       70,        90,        90,        90,      425   },  //  40

    {   66,      80,      58,     102,     56,      95,     130,     40,      80,      30,      115,     114,      58,      102,      80,      108,      90,        90,        90,        90,      425   },  //  41
    {   66,      80,      58,     102,     56,      95,     100,     50,      80,      30,      125,     114,      58,      102,      80,      108,      90,        90,        90,        90,      425   },  //  42
    {   66,      58,      94,      64,      60,      95,     122,     20,     106,     48,      115,     120,      58,      102,      80,      114,      58,        90,        90,        58,      425   },  //  43
    {   66,      78,      94,      44,      60,      95,     106,     22,     124,     32,      113,     120,      58,      102,      80,      116,      22,        90,       106,       22,      425   },  //  44
    {   66,      78,      48,      44,      60,      75,     106,     54,     132,     32,      107,     120,      70,       90,       80,      116,      10,        90,       106,       10,      425   },  //  45
    {   66,      72,      48,      62,      60,      75,     106,     54,     132,     32,      105,     120,      70,       90,       80,      116,      10,        90,       106,       10,      650   },  //  46
    {   70,      72,      86,      62,      58,      75,     128,     60,     116,     32,       95,      100,      70,       70,       60,       84,       20,        90,        80,        20,      510   },  //  47
    {   66,      72,      86,      62,      60,      43,     128,     66,      80,      20,       73,       74,       68,       84,       70,       72,       58,        90,        86,        58,      510   },  //  48
    {   66,      72,      86,      62,      60,      43,     128,     80,     116,     32,       69,       74,       68,       84,       70,       72,      118,       90,       118,       66,      510   },  //  49
    {   66,      72,      86,      62,      60,      43,     128,     80,     116,     32,       69,       74,       68,       84,       70,       72,      124,       90,       124,       90,      425   },  //  50

    {   66,      72,      86,      62,      60,      43,      94,      54,     132,     32,      105,     100,      70,       70,       60,       84,       78,        90,       116,       78,      680   },  //  51
    {   66,      68,      86,      62,      60,      43,     128,     54,     132,     54,      105,     116,      90,       50,       60,      108,      78,        90,       116,       78,      680   },  //  52
    {   70,      66,      66,      78,      60,      43,     130,     54,     100,     66,      105,     120,      70,       80,       70,      114,      90,        90,        90,        90,      680   },  //  53
    {   46,      90,      80,      90,      44,      45,     128,     28,     106,     58,       85,      100,      82,       94,       94,       90,       80,        90,        80,        80,      680   },  //  54
    {   46,      80,      58,     102,     40,      59,     128,     38,      82,      58,       65,      100,      74,       86,       80,       94,       90,        90,       122,       90,      680   },  //  55
    {   46,      80,      58,     102,     40,      63,     112,     54,     140,     38,       65,      100,      96,       66,      102,      94,       90,        90,       122,       90,      450   },  //  56
    {   43,      80,      58,     102,     40,      57,     128,     36,     122,     54,       85,      100,     114,      66,       82,       94,       74,        90,       158,       74,      425   },  //  57
    {   44,      80,      70,      90,      40,      65,     132,     28,     136,     38,       99,      100,     114,     112,      88,       94,       74,        90,       160,       74,      850   },  //  58
    {   68,      94,      96,      80,      60,      79,     128,     28,     120,     36,      115,     104,      98,       72,       82,       96,       80,        90,       142,       80,      510   },  //  59
    {   76,     100,     90,      90,      60,      87,     128,     28,      80,      32,      115,     100,      98,       74,       88,       94,       64,        90,       102,       64,      340   },  //  60

    {   88,      90,      76,      92,      86,      89,     140,     80,      94,      32,      119,     100,      98,       74,       88,       94,       30,        90,        90,        90,      425   },  //  61
    {   68,      72,      86,      62,      60,      39,     130,     78,     124,     38,       69,       74,       68,       84,       70,       68,       90,        90,       150,       90,      2125 },  //  62
    {   68,      72,      86,      62,      60,      39,     130,     52,      94,      50,       69,       74,       68,       84,       70,       68,       90,        90,       150,       90,      425   },  //  63
    {   66,      80,      58,     102,     56,      45,     130,     80,     130,     30,       65,      114,      58,      102,      80,      108,      90,        90,        90,        90,      765   },  //  64
    {   66,      80,      58,     102,     56,      91,     104,     60,     138,     30,      135,     114,      58,      102,      80,      108,      90,        90,        90,        90,      765   },  //  65
    {   66,      78,      94,      50,      60,      79,     116,     22,     124,    114,     131,     120,      58,      102,      80,      116,      22,        90,       106,       90,      850   },  //  66
    {   66,      58,      84,      64,      60,      95,     122,     20,     106,     48,      115,     120,      58,      102,      80,      114,      28,        90,        90,        90,      425   },  //  67
    {   66,      74,      86,      64,      60,      95,     122,     20,     106,     48,      115,      96,       58,      102,      80,       88,       38,        90,       106,       90,      850   },  //  68
    {   62,      72,      86,      62,      60,      39,     130,     78,     124,     38,       69,       74,       68,       84,       70,       68,       90,        90,       150,       90,      1275 },  //  69
    {   68,      72,      86,      62,      60,      29,     124,     78,     134,     38,       69,       74,       68,       84,       70,       68,      102,       90,       156,       90,      425   },  //  70
  */
  {   74,      35,      44,      62,      60,      75,      88,      68,     138,     38,      125,     128,      84,       70,       72,      116,      66,        90,       106,       90,      850   },  //  71
  {   74,      35,      64,      48,      60,      75,     134,     58,      78,      52,      141,     128,      84,       70,       72,      117,      66,        90,       106,       90,      850   },  //  72
  {   70,      66,      66,      78,      60,      69,     120,     54,     132,     32,       99,      120,      70,       80,       70,      114,      90,        90,        90,        90,      500   },  //  73
  {   48,      90,      80,      90,      40,      35,     128,     28,      80,      66,       63,      100,      82,       94,       94,       90,       80,        90,        80,        90,      510   },  //  74
  {   46,      90,      80,      90,      40,      45,     128,     28,     106,     58,       85,      100,      82,       94,       94,       94,       90,        90,        90,        90,      255   },  //  75
  {   46,      80,      58,     102,     40,      41,      40,      38,     145,     30,       65,       90,       92,       86,       94,       94,       90,        90,       122,       90,      850   },  //  76
  {   72,     100,     90,      90,      60,      75,      54,      56,     134,     24,      115,      94,       98,       74,       88,       94,       64,        90,       100,       90,      850   },  //  77
  {   76,     100,     90,      90,      60,      87,     122,     28,      80,      32,      133,     100,      98,       74,       88,       94,       52,        90,        90,        90,      425   },  //  78
  {   66,      72,      86,      62,      60,      33,     134,     15,     106,    114,      87,      100,      98,       74,       88,       94,       76,        90,       104,       90,      765   },  //  79
  {   66,      72,      86,      62,      60,      41,     128,     20,      80,      70,       71,       74,       68,       84,       70,       72,       90,        90,       108,       90,      850   },  //  80

  {   43,      80,      50,     110,     46,     115,    118,     80,      80,      44,       29,      102,      50,      110,      80,      100,      88,        90,      102,        90,      750   },  //  81
  {   43,      80,      60,     100,     46,     105,    118,     60,      80,      38,       67,      102,     126,      80,      118,     100,      90,        90,       90,         90,      680   },  //  82
  {   43,      80,      60,     100,     46,      95,     118,     54,      92,      38,      105,     108,     134,      62,      116,     100,      94,        90,       94,         90,      680   },  //  83
  {   43,      80,      50,     110,     46,      95,     118,     54,     118,     28,       77,      104,     145,      62,      125,     100,      98,        90,       98,         90,      850   },  //  84
  {   48,      80,      60,     100,     50,     117,     88,      80,     114,     30,       91,      110,      62,       98,       80,      100,      94,        90,       94,         90,      680   },  //  85
  {   62,      80,      60,     100,     50,     117,     88,      80,     114,     30,       75,      110,      62,       98,       80,      106,      70,        90,       70,         90,      680   },  //  86
  {   60,      80,      74,      86,      60,     117,     88,      80,      90,      30,       55,      122,      60,      100,      80,      117,      90,        90,       90,         90,      680   },  //  87
  {   60,      80,     114,     42,      56,      63,     130,     80,      98,      44,       55,      120,      60,      100,      80,      117,      90,        90,       90,         90,      680   },  //  88
  {   60,      80,     120,     18,      56,      77,     132,     26,      98,      54,       55,      120,      60,      100,      80,      117,      90,        90,       90,         90,      680   },  //  89
  {   60,      82,      90,      78,      56,     105,    104,     62,      98,      56,       55,      120,      60,      100,      80,      117,      78,        90,       90,         90,      680   },  //  90

  {   68,     104,     90,      94,      56,     105,    110,     62,      98,      56,       45,      114,      58,       84,       62,      104,      78,        90,        90,        90,      680   },  //  91
  {   43,      80,      60,      94,      38,     105,    120,     62,      98,      40,       55,      104,      86,       78,       78,      100,      90,        90,       102,       90,      1275 },  //  92
  {   43,      80,      60,     100,     40,      77,     128,     40,     114,     32,       77,      104,     108,      60,       78,      100,      90,        90,       102,       90,      595   },  //  93
  {   43,      80,      60,     100,     40,      77,     122,     40,     122,     26,       87,      104,     140,      40,       78,      100,      90,        90,       102,       90,      595   },  //  94
  {   43,      80,      60,     100,     40,      29,     130,     40,     122,     26,      131,     104,     145,      40,       78,      100,      90,        90,       102,       90,      680   },  //  95
  {   43,      80,      60,     100,     40,      29,      40,      20,     142,    120,     131,     104,     145,     118,      70,      100,      90,        90,       102,       90,      765   },  //  96
  {   43,      80,      60,     100,     40,      29,      40,      20,     142,    120,     131,     104,     145,     118,      54,      100,      90,        90,       102,       90,      680   },  //  97
  {   43,      80,      60,     100,     40,      29,      40,      38,     124,    120,     131,     104,     145,     100,     125,     100,      90,        90,       102,       90,      680   },  //  98
  {   43,      80,      60,     100,     42,     135,     90,      80,      84,      70,       25,      104,      90,       50,       70,       92,       90,        90,       102,       90,      680   },  //  99
  {   46,      80,      74,      76,      46,     135,     90,      80,      84,      70,      25,       104,      82,       72,       70,       94,       90,        90,       102,       90,      680   },  //  100

  {   78,      82,      90,      70,      58,     109,    118,     76,      80,      34,       51,      124,      60,      100,      80,      117,      78,        90,        90,        90,      1275 },  //  101
  {   60,      82,     100,     52,      56,      83,     128,     46,     120,     32,       83,      120,      60,      100,      80,      117,      78,        90,        90,        90,      595   },  //  102
  {   60,      82,     120,     20,      56,      73,     134,     38,     120,     38,       83,      120,      60,      100,      80,      117,      78,        90,        90,        90,      680   },  //  103
  {   60,      82,     120,     15,      56,      29,     134,     38,     120,     30,      131,     120,      60,      100,      80,      117,      78,        90,        90,        90,      680   },  //  104
  {   60,      80,      42,      15,      56,      29,      40,      18,     140,    120,     131,     120,      60,      100,      80,      117,      78,        90,        90,        90,      680   },  //  105
  {   60,     112,     42,      15,      56,      29,      40,      18,     140,    120,     131,     120,      60,      100,      80,      117,      78,        90,        90,        90,      595   },  //  106
  {   60,      35,      60,      15,      56,      29,      40,      36,     122,    120,     131,     120,      60,      100,      80,      117,      78,        90,        90,        90,      680   },  //  107
  {   68,      90,     110,     70,      56,     135,     90,      76,      80,      70,       25,      118,      60,      100,      80,      117,      78,        90,        90,        90,      680   },  //  108
  {   62,      82,      70,      90,      52,      43,      90,      28,      86,      60,       41,      108,      70,       90,       78,       98,       90,        90,        90,        90,      680   },  //  109
  {   60,      80,      50,     110,     50,      49,     130,     76,      84,      30,      111,     110,      50,      110,      80,      100,      90,        90,        90,        90,      425   },  //  110

  {   52,      80,      60,      98,      52,      47,     120,     34,     120,     50,       51,       98,       52,      104,      82,       90,       94,        90,       126,       90,      425   },  //  111
  {   43,     102,     98,      78,      44,      47,     120,     32,     145,     36,       69,      102,     114,      66,      125,      96,       80,        90,       140,       90,      425   },  //  112
  {   66,     102,     98,      78,      54,      45,     120,     22,     145,     36,      113,     102,      92,      120,     125,      96,       80,        90,       140,       90,      425   },  //  113
  {   74,     102,     98,      78,      66,      87,     120,     22,     138,     28,      113,     102,     100,      72,       82,       94,       66,        90,       112,       90,      765   },  //  114
  {  100,     84,      64,      92,      84,      99,     120,     44,      84,      28,      113,     102,     106,      40,       64,       96,       50,        90,        90,        90,      765   },  //  115
  {  100,     84,      64,      92,      86,      89,     120,     44,     110,     28,      113,     102,     106,      40,       64,       96,       52,        90,        90,        90,      255   },  //  116
  {   94,      78,      74,      92,      76,      57,     120,     15,     138,     28,      131,     114,     106,      40,       64,      112,      38,        90,        90,        90,      850   },  //  117
  {   80,      92,      92,      80,      72,      95,     122,     48,      82,      36,       75,      102,     100,      72,       90,       98,       52,        90,        90,        90,      850   },  //  118
  {   52,      94,      56,     124,      46,    103,    126,     44,     116,     36,       59,      102,      74,      116,     106,      96,       70,        90,        80,        90,      1275 },  //  119
  {   58,     100,     56,     126,      44,     69,     124,     44,     116,     38,       61,       94,       90,      106,     116,      96,       88,        90,       138,       90,      680   },  //  120
  /*
    {   58,     118,    114,     88,      50,      25,     126,     64,     126,     36,       81,      108,     102,     120,     125,      90,       80,        90,       100,       90,      510   },  //  121
    {   68,     106,     60,     128,     54,     139,    116,     68,     126,     36,      105,     104,      90,       86,       98,       98,       78,        90,        90,        90,      765   },  //  122
    {   78,     144,     84,     130,     68,      87,     116,     20,     126,     36,       81,      118,     110,      74,       96,      106,      92,        90,        92,        90,      510   },  //  123
    {   78,     118,     56,     133,     68,      45,     132,     20,     138,     24,      115,     118,     110,      50,       78,      108,      74,        90,        92,        90,      510   },  //  124
    {   78,     118,     56,     133,     68,      45,     132,     84,      80,      24,      115,     118,     110,      50,       78,      108,      76,        90,        94,        90,      255   },  //  125
    {   68,     106,     60,     128,     54,      43,     128,     62,      98,      32,      117,     104,      90,       86,       98,       98,       70,        90,        82,        90,      935   },  //  126
    {   54,     112,    116,     74,      46,      87,     128,     44,     118,     32,       69,      104,      98,      120,     125,      98,       96,        90,       118,       90,      765   },  //  127
    {   48,     106,    116,     74,      44,      87,     128,     44,     118,     32,       69,      112,      94,      120,     120,      98,       72,        90,        90,        90,      765   },  //  128
    {   80,     118,     56,     133,     68,      45,     132,     62,      88,      24,      115,     112,     110,      50,       78,      104,      90,        90,       108,       90,      1275 },  //  129
    {   48,     114,     92,      92,      36,      45,     132,     56,     102,     24,      115,     104,     110,     100,     114,      88,       64,        90,        92,        90,      765   },  //  130

    {   54,     114,    120,     66,      42,      45,     118,     56,     102,    106,     115,      86,      100,     100,     118,      82,       74,        90,       104,       90,      765   },  //  131
    {   72,      82,      82,      74,      66,      95,      54,      58,     102,    106,     123,      94,       86,       78,       78,       88,      102,       90,       110,       90,      765   },  //  132
    {   62,      82,      70,      90,      52,     119,    100,     74,     132,     70,      117,     108,      70,       90,       78,       98,       90,        90,        90,        90,      680   },  //  133
    {   64,      64,      76,      64,      58,      91,     124,     15,     128,     40,      113,     116,      82,       62,       62,      117,      48,        90,       102,       90,      680   },  //  134
    {   64,      35,      40,      58,      58,      91,     124,     15,     128,     40,      113,     116,      84,       48,       54,      108,      74,        90,        94,        90,      680   },  //  135
    {   64,      82,     106,     54,      58,      47,     124,     26,     126,     40,       63,      106,      28,      102,      46,       94,       66,        90,        98,        90,      1275 },  //  136
    {   66,      78,      88,      60,      58,      47,     132,     22,      98,      40,       63,       94,       82,       62,       58,       76,       90,        90,       152,       90,      765   },  //  137
    {   64,      96,     120,     54,      58,      47,     132,     76,     116,     40,       61,       76,       68,       96,       76,       60,       90,        90,       146,       90,      765   },  //  138
    {   64,      96,     120,     54,      58,      33,     134,     50,     116,     40,       71,       76,       68,       96,       76,       60,       90,        90,       146,       90,      255   },  //  139
    {   48,      96,     120,     54,      46,      29,     132,     76,     102,     40,      103,      84,       68,       86,       82,       66,       90,        90,       142,       90,      850   },  //  140

    {   62,      70,      88,      60,      58,      85,     124,     78,     112,     38,       65,       88,       80,       68,       68,       80,       90,        90,       128,       90,      680   },  //  141
    {   80,      46,      44,      86,      70,     101,    124,     44,     116,     34,       57,      118,      36,      104,      66,      108,      78,        90,        90,        90,      680   },  //  142
    {   64,      44,      54,      70,      66,      89,     122,     15,      88,      74,      113,     116,      34,      104,      60,       98,       66,        90,       102,       90,      680   },  //  143
    {   62,      62,      74,      70,      56,      43,     128,     62,      98,      32,      117,     106,      32,      100,      54,       92,       90,        90,       102,       90,      765   },  //  144
    {   62,      70,      86,      62,      56,      43,     128,     26,     134,     32,      117,     106,      27,      104,      44,       92,       90,        90,       102,       90,      765   },  //  145
    {   62,      76,      96,      52,      56,      43,     128,     80,      80,      32,      117,     106,      27,      120,      52,       90,       90,        90,       102,       90,      765   },  //  146
    {   62,      35,      40,      62,      56,      33,     128,     72,     110,     32,      127,     124,      86,       44,       54,      106,      90,        90,       138,       90,      765   },  //  147
    {   44,      35,      40,      46,      72,      85,     128,     68,      98,      32,       75,      120,      86,       44,       48,      117,      94,        90,       116,       90,      765   },  //  148
    {   62,      70,      86,      62,      56,      75,     136,     76,      82,      32,       85,      106,      27,      104,      44,       92,       90,        90,       102,       90,      680   },  //  149
    {   62,      76,      96,      44,      56,      43,     128,     80,      80,      30,      117,     106,      27,      120,      52,       90,       90,        90,       102,       90,      680   },  //  150

    {   62,      76,      96,      46,      56,      43,     128,     80,      80,      30,      117,     106,      27,      120,      52,       90,       90,        90,       102,       90,      170   },  //  151
    {   70,      88,      82,      88,      54,      43,     128,     80,      80,      30,      117,      80,       40,      108,      66,       82,       90,        90,       124,       90,      680   },  //  152
    {   70,      90,      82,      88,      62,      11,      66,      30,     114,     32,      115,      98,       72,       78,       70,       90,       88,        90,        92,        90,      680   },  //  153
    {   62,      90,     118,     46,      62,     107,     40,      32,      96,     120,     117,      82,       27,      112,      60,       68,       78,        90,        82,        90,      680   },  //  154
    {   84,     100,    106,     74,      78,     135,     96,     108,     52,      64,       25,       82,       86,       54,       60,       76,      122,       90,       120,       90,      600   },  //  155
    {   66,      88,     118,     46,      62,      95,      92,      32,      96,      72,       25,       82,       27,      112,      60,       68,      124,       90,       106,       90,      680   },  //  156
    {   52,     108,    110,     78,      48,      91,     126,     32,      96,      30,       63,       82,       38,      100,      64,       64,      122,       90,       112,       90,      680   },  //  157
    {   43,      90,      72,      96,      38,      53,     140,     15,      84,      20,       91,       92,      108,      40,       64,       84,       90,        90,       108,       90,      680   },  //  158
    {   64,      82,      80,      86,      54,      53,     130,     15,     145,     30,      107,     106,      74,       80,       78,       96,      102,       90,       114,       90,      680   },  //  159
    {   64,      82,      50,     110,     54,      53,     130,     15,     145,     30,      107,     106,      50,      110,      78,       96,       82,        90,        98,        90,      680   },  //  160
  */
  {   64,      82,      50,     110,     54,      53,     130,     76,      84,      30,      107,     106,      50,      110,      78,       96,       82,        90,        98,        90,      680   },  //  161
  {   64,      82,      50,     110,     54,     135,    130,     76,      84,      30,       25,      106,      50,      110,      78,       96,       82,        90,        98,        90,      680   },  //  162
  {   60,      80,      50,     110,     50,     135,    130,     80,      80,      30,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      850   },  //  163
};


/*============================================================================*/
// 前進動作
int Servo_Prg_1_Step = 15;
int Servo_Prg_1 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,      500  },  //  1
  {   50,      80,      50,     110,     45,     135,    125,     68,      92,      35,       25,       99,       77,       49,       51,       90,       90,        90,        90,       90,      200  },  //  2

  {   50,      80,      50,     110,     47,     121,    120,     68,      92,      40,        6,       101,      92,       70,       77,       84,       90,        90,        90,       90,      350  },  //  3
  {   70,      99,      67,     108,     58,     107,    120,     68,      92,      40,       10,      113,      66,      100,      80,      110,      90,        90,        90,       90,      250  },  //  4
  {   70,     110,    110,     83,      59,     135,    120,     68,      92,      40,       25,      113,      50,      110,      80,      105,      90,        90,        90,       90,      200  },  //  5
  {   72,      83,      90,      68,      59,     154,    120,     68,      92,      40,       39,      113,      50,      110,      80,      107,      90,        90,        90,       90,      350  },  //  6
  {   50,      80,      60,      94,      47,     150,    120,     68,      92,      40,       53,      102,      52,       93,       61,       90,       90,        90,        90,       90,      250  },  //  7
  {   50,      80,      50,     110,     48,     135,    120,     68,      92,      40,       25,      101,      77,       49,       51,       90,       90,        90,        90,       90,      250  },  //  8

  {   50,      80,      50,     110,     47,     121,    120,     68,      92,      40,        6,       101,      92,       70,       77,       84,       90,        90,        90,       90,      350  },  //  3
  {   70,      99,      67,     108,     58,     107,    120,     68,      92,      40,       10,      113,      66,      100,      80,      110,      90,        90,        90,       90,      250  },  //  4
  {   70,     110,    110,     83,      59,     135,    120,     68,      92,      40,       25,      113,      50,      110,      80,      105,      90,        90,        90,       90,      200  },  //  5
  {   72,      83,      90,      68,      59,     154,    120,     68,      92,      40,       39,      113,      50,      110,      80,      107,      90,        90,        90,       90,      350  },  //  6
  {   50,      80,      60,      94,      47,     150,    120,     68,      92,      40,       53,      102,      52,       93,       61,       90,       90,        90,        90,       90,      250  },  //  7
  {   50,      80,      50,     110,     48,     135,    120,     68,      92,      40,       25,      101,      77,       49,       51,       90,       90,        90,        90,       90,      250  },  //  8

  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,      500  }   //  9
};


/*============================================================================*/
// 後退動作
int Servo_Prg_2_Step = 15;
int Servo_Prg_2 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   50,      80,      50,     110,     47,     136,    120,     68,      92,      40,       25,      102,      50,      110,      80,       90,        90,       90,        90,        90,      150  },
  {   50,      80,      50,     110,     48,     135,    120,     68,      92,      40,       25,      101,      77,       49,       51,       90,        90,       90,        90,        90,      250  },
  {   50,      80,      60,      94,      47,     150,    120,     68,      92,      40,       53,      102,      52,       93,       61,       90,        90,       90,        90,        90,      250  },
  {   72,      83,      90,      71,      59,     154,    120,     68,      92,      40,       39,      113,      50,      110,      80,      107,       90,       90,        90,        90,      350  },
  {   70,     110,    110,     83,      59,     135,    120,     68,      92,      40,       25,      113,      50,      110,      80,      110,       90,       90,        90,        90,      200  },
  {   70,      99,      67,     108,     58,     107,    120,     68,      92,      40,       10,      113,      66,      100,      80,      110,       90,       90,        90,        90,      250  },

  {   50,      80,      50,     110,     47,     121,    120,     68,      92,      40,        6,       101,      89,       70,       77,       84,        90,       90,        90,        90,      350  },
  {   50,      80,      50,     110,     48,     135,    120,     68,      92,      40,       25,      101,      77,       49,       51,       90,        90,       90,        90,        90,      250  },
  {   50,      80,      60,      94,      47,     150,    120,     68,      92,      40,       53,      102,      52,       93,       61,       90,        90,       90,        90,        90,      250  },
  {   72,      83,      90,      71,      59,     154,    120,     68,      92,      40,       39,      113,      50,      110,      80,      107,       90,       90,        90,        90,      350  },
  {   70,     110,    110,     83,      59,     135,    120,     68,      92,      40,       25,      113,      50,      110,      80,      110,       90,       90,        90,        90,      200  },
  {   70,      99,      67,     108,     58,     107,    120,     68,      92,      40,       10,      113,      66,      100,      80,      110,       90,       90,        90,        90,      250  },

  {   50,      80,      50,     110,     47,     121,    120,     68,      92,      40,        6,       101,      89,       70,       77,       84,        90,       90,        90,        90,      350  },
  {   50,      80,      50,     110,     45,     135,    125,     68,      92,      35,       25,       99,       77,       49,       51,       90,        90,       90,        90,        90,      200  },

  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,       90,       90,        90,        90,      500  }   // 立正
};


/*============================================================================*/
// 左轉動作
int Servo_Prg_3_Step = 8;
int Servo_Prg_3 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    120,     80,      80,      40,       25,      110,      50,      110,      80,      100,      90,       120,       90,       90,      100  },
  {   74,      80,      50,     110,     61,     135,    120,     70,      90,      40,       25,      115,      50,      110,      80,      114,      90,       120,       90,       90,      150  },
  {   74,     109,    111,     83,      62,     135,    120,     70,      90,      40,       25,      115,      50,      110,      80,      114,      90,       120,       90,       90,      400  },
  {   85,      94,      78,      94,      63,     135,    120,     70,      90,      40,       25,      107,      50,      110,      87,      111,      65,       120,       90,       90,      400  },
  {   56,      84,      56,     104,     54,     135,    120,     70,      90,      40,       25,      104,      50,      110,      83,       85,       65,       120,       90,       90,      400  },
  {   49,      84,      56,     104,     51,     135,    120,     70,      90,      40,       25,      100,      72,       65,       60,       81,       65,       120,       90,       90,      400  },
  {   49,      84,      56,     104,     51,     135,    120,     70,      90,      40,       25,      100,      72,       65,       60,       81,       85,       120,       90,       90,      400  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,      500  }   // 立正
};


/*============================================================================*/
// 右轉動作
int Servo_Prg_4_Step = 8;
int Servo_Prg_4 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    120,     80,      80,      40,       25,      110,      50,      110,      80,      100,      90,        60,        90,       90,      100  },
  {   46,      80,      50,     110,     45,     135,    120,     70,      90,      40,       25,       99,       50,      110,      80,       86,       90,        60,        90,       90,      150  },
  {   46,      80,      50,     110,     45,     135,    120,     70,      90,      40,       25,       98,       77,       49,       51,       86,       90,        60,        90,       90,      400  },
  {   49,      73,      50,     110,     53,     135,    120,     70,      90,      40,       25,       97,       66,       82,       66,       75,       90,        60,       115,      90,      400  },
  {   75,      77,      50,     110,     56,     135,    120,     70,      90,      40,       25,      106,      56,      104,      76,      104,      90,        60,       115,      90,      400  },
  {   79,     100,     95,      88,      60,     135,    120,     70,      90,      40,       25,      109,      56,      104,      76,      111,      90,        60,       115,      90,      400  },
  {   79,     100,     95,      88,      60,     135,    120,     70,      90,      40,       25,      109,      56,      104,      76,      111,      90,        60,        95,       90,      400  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,       90,      500  }   // 立正
};


/*============================================================================*/
// 左橫移動作
int Servo_Prg_5_Step = 7;
int Servo_Prg_5 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   66,      80,      50,     110,     52,     135,    120,     80,      80,      40,       25,      107,      50,      110,      80,      106,      90,        90,        90,        90,      100  },
  {   64,      96,      85,      92,      54,     135,    120,     80,      80,      40,       25,      109,      50,      110,      81,      108,      90,        90,        90,        90,      100  },
  {   73,      89,      71,      99,      71,     135,    120,     80,      80,      40,       25,      109,      50,      110,      81,      105,      90,        90,        90,        90,      100  },
  {   70,      96,      80,      92,      66,     135,    120,     80,      80,      40,       25,      109,      59,       97,       75,       97,       90,        90,        90,        90,      100  },
  {   52,      85,      63,     101,     48,     135,    120,     80,      80,      40,       25,       90,       55,      108,      85,       80,       90,        90,        90,        90,      150  },
  {   54,      85,      63,     101,     51,     135,    120,     80,      80,      40,       25,      106,      71,       69,       61,       90,       90,        90,        90,        90,      150  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  }   // 立正
};


/*============================================================================*/
// 右橫移動作
int Servo_Prg_6_Step = 7;
int Servo_Prg_6 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   54,      80,      50,     110,     53,     135,    120,     80,      80,      40,       25,      108,      50,      110,      80,       94,       90,        90,        90,        90,      100  },
  {   52,      79,      50,     110,     51,     135,    120,     80,      80,      40,       25,      106,      68,       75,       64,       96,       90,        90,        90,        90,      100  },
  {   55,      79,      50,     110,     51,     135,    120,     80,      80,      40,       25,       89,       61,       89,       71,       87,       90,        90,        90,        90,      100  },
  {   63,      85,      63,     101,     51,     135,    120,     80,      80,      40,       25,       94,       68,       80,       64,       90,       90,        90,        90,        90,      100  },
  {   80,      75,      52,     105,     70,     135,    120,     80,      80,      40,       25,      112,      59,       97,       75,      108,      90,        90,        90,        90,      150  },
  {   70,      99,      91,      89,      54,     135,    120,     80,      80,      40,       25,      109,      59,       97,       75,      106,      90,        90,        90,        90,      150  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  }   // 立正
};


/*============================================================================*/
// 左踢動作
int Servo_Prg_7_Step = 7;
int Servo_Prg_7 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      84,      50,     110,     60,     135,    125,     80,      80,      35,       25,      110,      51,      110,      78,      112,      90,        90,        90,        90,      300  },
  {   60,      84,     116,    105,     60,     145,    125,     80,      80,      35,       45,      110,      51,      110,      78,      118,      90,        90,        90,        90,      400  },
  {   74,      84,     116,    105,     60,     145,    125,     80,      80,      35,       45,      110,      51,      110,      78,      118,      90,        90,        90,        90,      250  },
  {   74,      67,      40,      61,      55,     155,    109,     90,      90,      59,       55,      103,      57,      110,      84,      114,      90,        90,        90,        90,      200  },
  {   74,     117,     40,      61,      55,     155,    109,     90,      90,      59,       55,      103,      57,      110,      84,      114,      90,        90,        90,        90,      300  },
  {   80,      73,      60,     100,     55,     135,    125,     80,      80,      35,       25,      103,      51,      110,      78,      108,      90,        90,        90,        90,      350  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  }   // 立正
};


/*============================================================================*/
// 右踢動作
int Servo_Prg_8_Step = 7;
int Servo_Prg_8 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   48,      82,      50,     109,     50,     135,    125,     80,      80,      35,       25,      100,      50,      110,      76,      100,      90,        90,        90,        90,      300  },
  {   42,      82,      50,     109,     50,     115,    125,     80,      80,      35,       15,      100,      55,       44,       76,      100,      90,        90,        90,        90,      400  },
  {   42,      82,      50,     109,     50,     115,    125,     80,      80,      35,       15,      100,      55,       44,       76,       86,       90,        90,        90,        90,      250  },
  {   46,      76,      50,     103,     57,     105,    101,     70,      70,      51,        5,       105,      99,      120,      93,       86,       90,        90,        90,        90,      200  },
  {   46,      76,      50,     103,     57,     105,    101,     70,      70,      51,        5,       105,      99,      120,      43,       86,       90,        90,        90,        90,      300  },
  {   52,      82,      50,     109,     57,     135,    125,     80,      80,      35,       25,      105,      60,      100,      87,       80,       90,        90,        90,        90,      350  },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  }   // 立正
};


/*============================================================================*/
// 前滑動作
int Servo_Prg_9_Step = 16;
int Servo_Prg_9 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    135,     80,      80,      25,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      50    },  // 1
  {   46,      89,      60,     107,     42,     150,    120,     55,     105,     40,       10,       96,       59,       94,       71,       81,     76  ,        90,        84,        90,      200  },  // 2

  {   47,     108,     73,     105,     42,     150,    120,     55,     105,     40,       10,       88,       86,       50,       59,       90,       76,       90,       105,        90,      200  },  // 3
  {   67,     103,     73,     106,     70,     150,    120,     55,     105,     40,       10,      110,      54,       86,       56,       95,       76,       90,       105,        90,      100  },  // 4
  {   88,     111,     57,     123,     72,     150,    120,     55,     105,     40,       10,      114,      81,       46,       36,      111,      77,       90,       105,        90,      150  },  // 5
  {   70,     101,    109,     74,      72,     150,    120,     55,     105,     40,       10,      118,      50,       86,       52,      113,      75,       90,       104,        90,      200  },  // 6
  {   65,     104,     73,     106,     50,     150,    120,     55,     105,     40,       10,       90,       54,       86,       57,       93,       75,       90,       104,        90,      100  },  // 7
  {   49,     124,    113,     79,      46,     150,    120,     55,     105,     40,       10,       88,       37,      102,      49,       72,       75,       90,       103,        90,      150  },  // 8

  {   47,     108,     73,     105,     42,     150,    120,     55,     105,     40,       10,       88,       86,       50,       59,       90,       76,       90,       105,        90,      200  },  // 3
  {   67,     103,     73,     106,     70,     150,    120,     55,     105,     40,       10,      110,      54,       86,       56,       95,       76,       90,       105,        90,      100  },  // 4
  {   88,     111,     57,     123,     72,     150,    120,     55,     105,     40,       10,      114,      81,       46,       36,      111,      77,       90,       105,        90,      150  },  // 5
  {   70,     101,    109,     74,      72,     150,    120,     55,     105,     40,       10,      118,      50,       86,       52,      113,      75,       90,       104,        90,      200  },  // 6
  {   65,     104,     73,     106,     50,     150,    120,     55,     105,     40,       10,       90,       54,       86,       57,       93,       75,       90,       104,        90,      100  },  // 7
  {   49,     124,    113,     79,      46,     150,    120,     55,     105,     40,       10,       88,       37,      102,      49,       72,       75,       90,       103,        90,      150  },  // 8

  {   44,     108,     81,     105,     42,     150,    120,     55,     105,     40,       10,       88,       91,       40,       59,       81,       76,       90,       105,        90,      200  },  // 9
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      250  }   // 立正
};


/*============================================================================*/
// 後滑動作
int Servo_Prg_10_Step = 13;
int Servo_Prg_10 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    130,     80,      80,      30,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      50    },  // 1
  {   67,     101,     81,     105,     55,     150,    120,     74,      86,      40,       10,      105,      54,       79,       58,       93,       105,        90,       75,       90,      300  },  // 2
  {   44,     101,     81,     105,     40,     150,    120,     50,     110,     40,       10,       87,       43,       91,       30,       71,       105,        90,       75,       90,      200  },  // 3

  {   42,     100,     90,      90,      41,     150,    110,     50,     110,     50,       10,       92,       38,       81,       41,       71,       111,        90,       77,       90,      120  },  // 4
  {   88,      96,      77,      95,      70,     150,    110,     50,     110,     50,       10,      116,      81,       45,       48,      115,      100,        90,       65,       90,      240  },  // 5
  {   89,     118,     79,     121,     69,     150,    110,     50,     110,     50,       10,      118,      69,       70,       60,      118,      103,        90,       69,       90,      180  },  // 6
  {   45,     111,    115,     78,      43,     150,    110,     50,     110,     50,       10,       90,       65,       84,       63,       73,       115,        90,       80,       90,      240  },  // 7

  {   42,     100,     90,      90,      41,     150,    110,     50,     110,     50,       10,       92,       38,       81,       41,       71,       111,        90,       77,       90,      120  },  // 4
  {   88,      96,      77,      95,      70,     150,    110,     50,     110,     50,       10,      116,      81,       45,       48,      115,      100,        90,       65,       90,      240  },  // 5
  {   89,     118,     79,     121,     69,     150,    110,     50,     110,     50,       10,      118,      69,       70,       60,      118,      103,        90,       69,       90,      180  },  // 6
  {   45,     111,    115,     78,      43,     150,    110,     50,     110,     50,       10,       90,       65,       84,       63,       73,       115,        90,       80,       90,      240  },  // 7

  {   42,     101,     81,     105,     40,     150,    125,    100,     60,      35,       10,       93,       23,       90,       39,       71,       111,        90,       77,       90,      450  },  // 8
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      200  }   // 立正
};


/*============================================================================*/
//  面朝上起立
int Servo_Prg_11_Step = 7;
int Servo_Prg_11 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500   },   // 立正
  {   60,      80,      50,      70,      50,     150,     60,      80,      80,     100,      10,      110,      90,      110,      80,      100,      90,        90,        90,        90,      1500 },
  {   60,      80,      50,      20,      50,     150,    130,     80,      80,      30,       10,      110,     140,     110,      80,      100,      90,        90,        90,        90,      600   },
  {   60,      80,      50,      30,     145,    150,     50,      80,      80,     110,      10,       15,      130,     110,      80,      100,      90,        90,        90,        90,      1200 },
  {  140,    117,    120,     70,     145,     30,     110,     80,      80,      50,      130,      15,       90,       40,       44,       20,       90,        90,        90,        90,      1500 },
  {   60,     117,    120,     70,      50,      40,     110,     80,      80,      50,      120,     110,      90,       40,       44,      100,      90,        90,        90,        90,      600   },
  {   60,      80,      50,     110,     50,     135,    125,     80,      80,      35,       25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      750   }   // 立正
};


/*============================================================================*/
// 面朝下起立
int Servo_Prg_12_Step = 2;
int Servo_Prg_12 [][ALLMATRIX] PROGMEM = {
  //   0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,  G13   ,  G14   ,  G16   ,  ms
  {   60,      80,      50,     110,     50,     135,     50,     80,      80,      110,      25,      110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
  {   60,      80,      50,     110,     50,      45,      50,     80,      80,      110,     113,     110,      50,      110,      80,      100,      90,        90,        90,        90,      500  },
};



/*============================================================================*/
void Set_PWM_to_Servo(int iServo, int iValue)
{
  int NewPWM = map(iValue, PWMRES_Min, PWMRES_Max, SERVOMIN, SERVOMAX);

  //Serial.print("Set_PWM_to_Servo = ");
  //Serial.print(iServo);
  //Serial.print(" , iValue = ");
  //Serial.print(iValue);
  //Serial.print(" , NewPWM = ");
  //Serial.println(NewPWM);

  if (iServo >= 19)
  {
    GPIO16SERVO.write(iValue);
  }
  else if (iServo >= 18)
  {
    GPIO14SERVO.write(iValue);
  }
  else if (iServo >= 17)
  {
    GPIO13SERVO.write(iValue);
  }
  else if (iServo >= 16)
  {
    GPIO12SERVO.write(iValue);
  }
  else
  {
    pwm.setPWM(iServo, 0, NewPWM);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Zero()
{
  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_0[Index] + (int8_t)EEPROM.read(Index);
  }

  // 重新載入馬達預設數值
  for (int iServo = 0; iServo < ALLSERVOS; iServo++)
  {
    Set_PWM_to_Servo(iServo, Running_Servo_POS[iServo]);
    delay(10);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Center()
{
  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_1[Index] + (int8_t)EEPROM.read(Index);
  }

  // 重新載入馬達預設數值
  for (int iServo = 0; iServo < ALLSERVOS; iServo++)
  {
    Set_PWM_to_Servo(iServo, Running_Servo_POS[iServo]);
    delay(10);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Run(int iMatrix[][ALLMATRIX],  int iSteps)
{
  int INT_TEMP_A, INT_TEMP_B, INT_TEMP_C;

  for ( int MainLoopIndex = 0; MainLoopIndex < iSteps; MainLoopIndex++)  // iSteps 步驟主迴圈
  {
    // InterTotalTime 此步驟總時間
    int InterTotalTime = iMatrix [ MainLoopIndex ] [ ALLMATRIX - 1 ] + (int8_t)EEPROM.read(ALLMATRIX - 1);

    // InterDelayCounter 此步驟基本延遲次數
    int InterDelayCounter = InterTotalTime / BASEDELAYTIME;

    // 內差次數迴圈
    for ( int InterStepLoop = 0; InterStepLoop < InterDelayCounter; InterStepLoop++)
    {

      for (int ServoIndex = 0; ServoIndex < ALLSERVOS; ServoIndex++)  // 馬達主迴圈
      {

        INT_TEMP_A = Running_Servo_POS[ServoIndex];                                                    // 馬達現在位置
        INT_TEMP_B = iMatrix[MainLoopIndex][ServoIndex] + (int8_t)EEPROM.read(ServoIndex);    // 馬達目標位置

        if (INT_TEMP_A == INT_TEMP_B)         // 馬達數值不變
        {
          INT_TEMP_C = INT_TEMP_B;
        }

        else if (INT_TEMP_A > INT_TEMP_B)   // 馬達數值減少
        {
          // PWM內差值 = map( 執行次數時間累加, 開始時間, 結束時間, 內差起始值, 內差最大值 )
          INT_TEMP_C =  map(BASEDELAYTIME * InterStepLoop, 0, InterTotalTime, 0, INT_TEMP_A - INT_TEMP_B);

          if (INT_TEMP_A - INT_TEMP_C >= INT_TEMP_B)
          {
            Set_PWM_to_Servo(ServoIndex, INT_TEMP_A - INT_TEMP_C);
          }
        }

        else if (INT_TEMP_A < INT_TEMP_B)   // 馬達數值增加
        {
          // PWM內差值 = map( 執行次數時間累加, 開始時間, 結束時間, 內差起始值, 內差最大值 )
          INT_TEMP_C =  map(BASEDELAYTIME * InterStepLoop, 0, InterTotalTime, 0, INT_TEMP_B - INT_TEMP_A);

          if (INT_TEMP_A + INT_TEMP_C <= INT_TEMP_B)
          {
            Set_PWM_to_Servo(ServoIndex, INT_TEMP_A + INT_TEMP_C);
          }
        }

      }

      delay(BASEDELAYTIME);
    }

    // 備份目前馬達數值
    for ( int Index = 0; Index < ALLMATRIX; Index++)
    {
      Running_Servo_POS[Index] = iMatrix[MainLoopIndex][Index] + (int8_t)EEPROM.read(Index);
    }

  }

}


/*============================================================================*/
void Get_PWM_Frequency()
{
  int iCab_Freq =  (int8_t)EEPROM.read(ALLSERVOS + 1);

  // 清除錯誤資料
  if (iCab_Freq > 120 || iCab_Freq < -120)
  {
    EEPROM.write(ALLSERVOS + 1, 0);
    EEPROM.commit();
    iCab_Freq = 0;
  }

  Set_PWM_Freq = PWM_Frequency + iCab_Freq;
}


/*============================================================================*/
void Get_Voltage_Value()
{
  int iCab_Vol =  (int8_t)EEPROM.read(ALLSERVOS + 2);

  // 清除錯誤資料
  if (iCab_Vol > 120 || iCab_Vol < -120)
  {
    EEPROM.write(ALLSERVOS + 2, 0);
    EEPROM.commit();
    iCab_Vol = 0;
  }

  Set_Voltage = Input_Voltage + iCab_Vol;
}


/*============================================================================*/
void writeKeyValue(int8_t key, int8_t value)
{
  EEPROM.write(key, value);
  EEPROM.commit();
}


/*============================================================================*/
int8_t readKeyValue(int8_t key)
{
  Serial.println("read");
  Serial.println(key);

  int8_t value = EEPROM.read(key);
}


/*============================================================================*/
void handleAction(WiFiClient client, String req, HTTPMethod method)
{
  server.send(200, "text/plain", "Hello from MiniPlan !");
}


/*============================================================================*/
void handleSave()
{
  String key = server.arg("key");
  String value = server.arg("value");

  int8_t keyInt = key.toInt();
  int8_t valueInt = value.toInt();

  // Software PWM PIN detach
  GPIO12SERVO.detach();
  GPIO13SERVO.detach();
  GPIO14SERVO.detach();
  GPIO16SERVO.detach();
  delay(50);

  if (keyInt == 100)
  {
    writeKeyValue(0, 0);
    writeKeyValue(1, 0);
    writeKeyValue(2, 0);
    writeKeyValue(3, 0);
    writeKeyValue(4, 0);
    writeKeyValue(5, 0);
    writeKeyValue(6, 0);
    writeKeyValue(7, 0);
    writeKeyValue(8, 0);
    writeKeyValue(9, 0);
    writeKeyValue(10, 0);
    writeKeyValue(11, 0);
    writeKeyValue(12, 0);
    writeKeyValue(13, 0);
    writeKeyValue(14, 0);
    writeKeyValue(15, 0);
    writeKeyValue(16, 0);
    writeKeyValue(17, 0);
    writeKeyValue(18, 0);
    writeKeyValue(19, 0);
    writeKeyValue(20, 0);
    //writeKeyValue(21, 0); // Set_PWM_Freq 不清除
    //writeKeyValue(22, 0); // Set_Voltage 不清除
  }
  else
  {
    // 確認資料介於 -125 ~ 125
    if (valueInt >= -125 && valueInt <= 125)
    {
      // 儲存校正值
      writeKeyValue(keyInt, valueInt);

      // 若 Set_PWM_Freq 有被修改就即時更新
      if (keyInt == 21) {
        Set_PWM_Freq = PWM_Frequency + valueInt;
        pwm.setPWMFreq(Set_PWM_Freq);
      }

      // 若 Set_Voltage 有被修改就即時更新
      if (keyInt == 22) {
        Set_Voltage = Input_Voltage + valueInt;
        Input_Voltage_Low = 0;
      }

    }
  }

  // Software PWM PIN attach
  GPIO12SERVO.attach(12);
  GPIO13SERVO.attach(13);
  GPIO14SERVO.attach(14);
  GPIO16SERVO.attach(16);
  delay(10);

  server.send(200, "text/html", "(key, value)=(" + key + "," + value + ")");
}


/*============================================================================*/
void handleController()
{
  String pm = server.arg("pm");
  String pms = server.arg("pms");
  String gpid = server.arg("gpid");
  String servo = server.arg("servo");

  if (pm != "")
  {
    Servo_PROGRAM = pm.toInt();
  }

  if (pms != "")
  {
    Servo_PROGRAM_Stack = pms.toInt();
  }

  if (servo != "")
  {
    int Servo_ID = servo.toInt();
    String ival = server.arg("value");
    int Servo_PWM = ival.toInt() + (int8_t)EEPROM.read(Servo_ID);
    int pulselength = map(Servo_PWM, PWMRES_Min, PWMRES_Max, SERVOMIN, SERVOMAX);

    //Serial.print("Servo ID = ");
    //Serial.print(Servo_ID);
    //Serial.print(", PWM = ");
    //Serial.println(pulselength);

    pwm.setPWM(Servo_ID, 0, pulselength);
  }

  if (gpid != "" && Input_Voltage_Low == 0 )
  {
    GPIO_ID = gpid.toInt();

    if (GPIO_ID == 12) {
      String ival = server.arg("value");
      GPIO12_PWM = ival.toInt() + (int8_t)EEPROM.read(16);
      GPIO12SERVO.write(GPIO12_PWM);
    }

    if (GPIO_ID == 13) {
      String ival = server.arg("value");
      GPIO13_PWM = ival.toInt() + (int8_t)EEPROM.read(17);
      GPIO13SERVO.write(GPIO13_PWM);
    }

    if (GPIO_ID == 14) {
      String ival = server.arg("value");
      GPIO14_PWM = ival.toInt() + (int8_t)EEPROM.read(18);
      GPIO14SERVO.write(GPIO14_PWM);
    }

    if (GPIO_ID == 16) {
      String ival = server.arg("value");
      GPIO16_PWM = ival.toInt() + (int8_t)EEPROM.read(19);
      GPIO16SERVO.write(GPIO16_PWM);
    }
  }

  server.send(200, "text/html", "(pm, pms)=(" + pm + "," + pms + ")");
}

/*============================================================================
  傳輸 EEPROM 模式
  ============================================================================*/
void handleGetEEPROM()
{
  int servo19Val = readKeyValue(19);
  String servo19ValStr = String(servo19Val);

  int servo18Val = readKeyValue(18);
  String servo18ValStr = String(servo18Val);

  int servo17Val = readKeyValue(17);
  String servo17ValStr = String(servo17Val);

  int servo16Val = readKeyValue(16);
  String servo16ValStr = String(servo16Val);

  int servo15Val = readKeyValue(15);
  String servo15ValStr = String(servo15Val);

  int servo14Val = readKeyValue(14);
  String servo14ValStr = String(servo14Val);

  int servo13Val = readKeyValue(13);
  String servo13ValStr = String(servo13Val);

  int servo12Val = readKeyValue(12);
  String servo12ValStr = String(servo12Val);

  int servo11Val = readKeyValue(11);
  String servo11ValStr = String(servo11Val);

  int servo10Val = readKeyValue(10);
  String servo10ValStr = String(servo10Val);

  int servo9Val = readKeyValue(9);
  String servo9ValStr = String(servo9Val);

  int servo8Val = readKeyValue(8);
  String servo8ValStr = String(servo8Val);

  int servo7Val = readKeyValue(7);
  String servo7ValStr = String(servo7Val);

  int servo6Val = readKeyValue(6);
  String servo6ValStr = String(servo6Val);

  int servo5Val = readKeyValue(5);
  String servo5ValStr = String(servo5Val);

  int servo4Val = readKeyValue(4);
  String servo4ValStr = String(servo4Val);

  int servo3Val = readKeyValue(3);
  String servo3ValStr = String(servo3Val);

  int servo2Val = readKeyValue(2);
  String servo2ValStr = String(servo2Val);

  int servo1Val = readKeyValue(1);
  String servo1ValStr = String(servo1Val);

  int servo0Val = readKeyValue(0);
  String servo0ValStr = String(servo0Val);

  server.send(200, "text/html", servo0ValStr + "," + servo1ValStr + "," + servo2ValStr + "," + servo3ValStr + "," + servo4ValStr + "," + servo5ValStr
              + "," + servo6ValStr + "," + servo7ValStr + "," + servo8ValStr + "," + servo9ValStr + "," + servo10ValStr + "," + servo11ValStr
              + "," + servo12ValStr + "," + servo13ValStr + "," + servo14ValStr + "," + servo15ValStr + "," + servo16ValStr + "," + servo17ValStr
              + "," + servo18ValStr + "," + servo19ValStr );
}


/*============================================================================
  無線傳輸模式
  ============================================================================*/
void handleOnLine()
{
  String m0 = server.arg("m0");
  String m1 = server.arg("m1");
  String m2 = server.arg("m2");
  String m3 = server.arg("m3");
  String m4 = server.arg("m4");
  String m5 = server.arg("m5");
  String m6 = server.arg("m6");
  String m7 = server.arg("m7");
  String m8 = server.arg("m8");
  String m9 = server.arg("m9");
  String m10 = server.arg("m10");
  String m11 = server.arg("m11");
  String m12 = server.arg("m12");
  String m13 = server.arg("m13");
  String m14 = server.arg("m14");
  String m15 = server.arg("m15");
  String g12 = server.arg("g12");
  String g13 = server.arg("g13");
  String g14 = server.arg("g14");
  String g16 = server.arg("g16");
  String t1 = server.arg("t1");

  int Servo_Prg_tmp [][21] = {
    //     0,             1,              2,              3,              4,              5,              6,              7,              8,              9,               10,              11,              12,              13,              14,              15,                  G12,           G13,           G14,           G16,        Time
    {m0.toInt(), m1.toInt(), m2.toInt(), m3.toInt(), m4.toInt(), m5.toInt(), m6.toInt(), m7.toInt(), m8.toInt(), m9.toInt(), m10.toInt(), m11.toInt(), m12.toInt(), m13.toInt(), m14.toInt(), m15.toInt(), g12.toInt(), g13.toInt(), g14.toInt(), g16.toInt(), t1.toInt()}
  };

  Servo_PROGRAM_Run(Servo_Prg_tmp, 1);

  server.send(200, "text/html", "(m0, m1)=(" + m0 + "," + m1 + ")");
}


/*============================================================================
  馬達歸零畫面
  ============================================================================*/
void handleZero()
{
  String content = "";
  content += "<html>";
  content += "<head>";
  content += "<title>MiniPlan Zero Check</title>";
  content += " <meta charset=\"UTF-8\">";
  content += " <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(16, 90)\">GPIO 16</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(14, 90)\">GPIO 14</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(13, 90)\">GPIO 13</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(12, 90)\">GPIO 12</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(8,80)\">Servo 8</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(7,80)\">Servo 7</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(9,110)\">Servo 9</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(6,50)\">Servo 6</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(10,25)\">Servo 10</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(5,135)\">Servo 5</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(11,110)\">Servo 11</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(4,50)\">Servo 4</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(12,50)\">Servo 12</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(3,110)\">Servo 3</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(13,110)\">Servo 13</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(2,50)\">Servo 2</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(14,80)\">Servo 14</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(1,80)\">Servo 1</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(15,100)\">Servo 15</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(0,60)\">Servo 0</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(100)\">ALL</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";
  content += "function controlServo(id, value) {";
  content += "  var xhttp = new XMLHttpRequest();";

  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?servo=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlGpid(id, value) {";
  content += "  var xhttp = new XMLHttpRequest();";

  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?gpid=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "function controlPm(value) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";

  server.send(200, "text/html", content);
}


/*============================================================================
  簡易動作編輯畫面
  ============================================================================*/
void handleEditor()
{
  String content = "";
  content += "<html>";
  content += "<head>";
  content += "  <title>MiniPlan Motion Editor</title>";
  content += "  <meta charset=\"UTF-8\">";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td>GPIO 16  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_16\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(16, 'gpid_16')\">SEND</button></td>";
  content += "<td>GPIO 14  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_14\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(14, 'gpid_14')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>GPIO 13  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_13\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(13, 'gpid_13')\">SEND</button></td>";
  content += "<td>GPIO 12  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_12\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(12, 'gpid_12')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Servo 8  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\" id=\"servo_8\" value=\"80\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(8,'servo_8')\">SEND</button></td>";
  content += "<td>Servo 7  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\" id=\"servo_7\" value=\"80\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(7, 'servo_7')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 9  ,  Default value = 110<br/><input class=\"pm_text\" type=\"text\" id=\"servo_9\" value=\"110\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(9,'servo_9')\">SEND</button></td>";
  content += "<td>Servo 6  ,  Default value = 50<br/><input class=\"pm_text\" type=\"text\" id=\"servo_6\" value=\"50\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(6,'servo_6')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 10  ,  Default value = 25<br/><input class=\"pm_text\" type=\"text\" id=\"servo_10\" value=\"25\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(10,'servo_10')\">SEND</button></td>";
  content += "<td>Servo 5  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_5\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(5,'servo_5')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Servo 11  ,  Default value = 110<br/><input class=\"pm_text\" type=\"text\" id=\"servo_11\" value=\"110\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(11,'servo_11')\">SEND</button></td>";
  content += "<td>Servo 4  ,  Default value = 50<br/><input class=\"pm_text\" type=\"text\" id=\"servo_4\" value=\"50\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(4,'servo_4')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 12  ,  Default value = 50<br/><input class=\"pm_text\" type=\"text\" id=\"servo_12\" value=\"50\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(12,'servo_12')\">SEND</button></td>";
  content += "<td>Servo 3  ,  Default value = 110<br/><input class=\"pm_text\" type=\"text\" id=\"servo_3\" value=\"110\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(3,'servo_3')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 13  ,  Default value = 110<br/><input class=\"pm_text\" type=\"text\" id=\"servo_13\" value=\"110\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(13,'servo_13')\">SEND</button></td>";
  content += "<td>Servo 2  ,  Default value = 50<br/><input class=\"pm_text\" type=\"text\" id=\"servo_2\" value=\"50\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(2,'servo_2')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 14  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\"  id=\"servo_14\" value=\"80\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(14,'servo_14')\">SEND</button></td>";
  content += "<td>Servo 1  ,  Default value = 80<br/><input class=\"pm_text\" type=\"text\" id=\"servo_1\" value=\"80\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(1,'servo_1')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 15  ,  Default value = 100<br/><input class=\"pm_text\" type=\"text\"  id=\"servo_15\" value=\"100\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(15,'servo_15')\">SEND</button></td>";
  content += "<td>Servo 0  ,  Default value = 60<br/><input class=\"pm_text\" type=\"text\" id=\"servo_0\" value=\"60\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(0,'servo_0')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(99)\">STANDBY POSE</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";

  content += "function controlServo(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = document.getElementById(textId).value;";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\",\"controller?servo=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlGpid(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = document.getElementById(textId).value;";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?gpid=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "function controlPm(value) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";
  server.send(200, "text/html", content);
}


/*============================================================================
  馬達校正畫面
  ============================================================================*/
void handleSetting()
{
  int servo22Val = readKeyValue(22);
  String servo22ValStr = String(servo22Val);

  int servo21Val = readKeyValue(21);
  String servo21ValStr = String(servo21Val);

  int servo20Val = readKeyValue(20);
  String servo20ValStr = String(servo20Val);

  int servo19Val = readKeyValue(19);
  String servo19ValStr = String(servo19Val);

  int servo18Val = readKeyValue(18);
  String servo18ValStr = String(servo18Val);

  int servo17Val = readKeyValue(17);
  String servo17ValStr = String(servo17Val);

  int servo16Val = readKeyValue(16);
  String servo16ValStr = String(servo16Val);

  int servo15Val = readKeyValue(15);
  String servo15ValStr = String(servo15Val);

  int servo14Val = readKeyValue(14);
  String servo14ValStr = String(servo14Val);

  int servo13Val = readKeyValue(13);
  String servo13ValStr = String(servo13Val);

  int servo12Val = readKeyValue(12);
  String servo12ValStr = String(servo12Val);

  int servo11Val = readKeyValue(11);
  String servo11ValStr = String(servo11Val);

  int servo10Val = readKeyValue(10);
  String servo10ValStr = String(servo10Val);

  int servo9Val = readKeyValue(9);
  String servo9ValStr = String(servo9Val);

  int servo8Val = readKeyValue(8);
  String servo8ValStr = String(servo8Val);

  int servo7Val = readKeyValue(7);
  String servo7ValStr = String(servo7Val);

  int servo6Val = readKeyValue(6);
  String servo6ValStr = String(servo6Val);

  int servo5Val = readKeyValue(5);
  String servo5ValStr = String(servo5Val);

  int servo4Val = readKeyValue(4);
  String servo4ValStr = String(servo4Val);

  int servo3Val = readKeyValue(3);
  String servo3ValStr = String(servo3Val);

  int servo2Val = readKeyValue(2);
  String servo2ValStr = String(servo2Val);

  int servo1Val = readKeyValue(1);
  String servo1ValStr = String(servo1Val);

  int servo0Val = readKeyValue(0);
  String servo0ValStr = String(servo0Val);

  String content = "";
  content += "<html>";
  content += "<head>";
  content += "  <title>MiniPlan Setting</title>";
  content += "  <meta charset=\"UTF-8\">";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 120px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 100px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td>GPIO 16<br/><input class=\"pm_text\" type=\"text\" id=\"servo_19\" value=\"" + servo19ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(19,'servo_19')\">SET</button></td>";
  content += "<td>GPIO 14<br/><input class=\"pm_text\" type=\"text\" id=\"servo_18\" value=\"" + servo18ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(18,'servo_18')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>GPIO 13<br/><input class=\"pm_text\" type=\"text\" id=\"servo_17\" value=\"" + servo17ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(17,'servo_17')\">SET</button></td>";
  content += "<td>GPIO 12<br/><input class=\"pm_text\" type=\"text\" id=\"servo_16\" value=\"" + servo16ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(16,'servo_16')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 8<br/><input class=\"pm_text\" type=\"text\" id=\"servo_8\" value=\"" + servo8ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(8,'servo_8')\">SET</button></td>";
  content += "<td>Servo 7<br/><input class=\"pm_text\" type=\"text\" id=\"servo_7\" value=\"" + servo7ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(7,'servo_7')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 9<br/><input class=\"pm_text\" type=\"text\" id=\"servo_9\" value=\"" + servo9ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(9,'servo_9')\">SET</button></td>";
  content += "<td>Servo 6<br/><input class=\"pm_text\" type=\"text\" id=\"servo_6\" value=\"" + servo6ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(6,'servo_6')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 10<br/><input class=\"pm_text\" type=\"text\" id=\"servo_10\" value=\"" + servo10ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(10,'servo_10')\">SET</button></td>";
  content += "<td>Servo 5<br/><input class=\"pm_text\" type=\"text\" id=\"servo_5\" value=\"" + servo5ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(5,'servo_5')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 11<br/><input class=\"pm_text\" type=\"text\" id=\"servo_11\" value=\"" + servo11ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(11,'servo_11')\">SET</button></td>";
  content += "<td>Servo 4<br/><input class=\"pm_text\" type=\"text\" id=\"servo_4\" value=\"" + servo4ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(4,'servo_4')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 12<br/><input class=\"pm_text\" type=\"text\" id=\"servo_12\" value=\"" + servo12ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(12,'servo_12')\">SET</button></td>";
  content += "<td>Servo 3<br/><input class=\"pm_text\" type=\"text\" id=\"servo_3\" value=\"" + servo3ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(3,'servo_3')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 13<br/><input class=\"pm_text\" type=\"text\" id=\"servo_13\" value=\"" + servo13ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(13,'servo_13')\">SET</button></td>";
  content += "<td>Servo 2<br/><input class=\"pm_text\" type=\"text\" id=\"servo_2\" value=\"" + servo2ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(2,'servo_2')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 14<br/><input class=\"pm_text\" type=\"text\" id=\"servo_14\" value=\"" + servo14ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(14,'servo_14')\">SET</button></td>";
  content += "<td>Servo 1<br/><input class=\"pm_text\" type=\"text\" id=\"servo_1\" value=\"" + servo1ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(1,'servo_1')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 15<br/><input class=\"pm_text\" type=\"text\" id=\"servo_15\" value=\"" + servo15ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(15,'servo_15')\">SET</button></td>";
  content += "<td>Servo 0<br/><input class=\"pm_text\" type=\"text\" id=\"servo_0\" value=\"" + servo0ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(0,'servo_0')\">SET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>PWM Frequency Calibration<br/><input class=\"pm_text\" type=\"text\" id=\"servo_21\" value=\"" + servo21ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(21,'servo_21')\">SET</button></td>";
  content += "<td>Voltage Calibration<br/><input class=\"pm_text\" type=\"text\" id=\"servo_22\" value=\"" + servo22ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(22,'servo_22')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Delay Time<br/><input class=\"pm_text\" type=\"text\" id=\"servo_20\" value=\"" + servo20ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(20,'servo_20')\">SET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";
  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"saveServo(100, 0)\">RESET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";

  content += "function saveServo(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = \"0\";";
  content += "  if(id==100){";
  //content += "    document.getElementById(\"servo_22\").value = \"0\";";
  //content += "    document.getElementById(\"servo_21\").value = \"0\";";
  content += "    document.getElementById(\"servo_20\").value = \"0\";";
  content += "    document.getElementById(\"servo_19\").value = \"0\";";
  content += "    document.getElementById(\"servo_18\").value = \"0\";";
  content += "    document.getElementById(\"servo_17\").value = \"0\";";
  content += "    document.getElementById(\"servo_16\").value = \"0\";";
  content += "    document.getElementById(\"servo_15\").value = \"0\";";
  content += "    document.getElementById(\"servo_14\").value = \"0\";";
  content += "    document.getElementById(\"servo_13\").value = \"0\";";
  content += "    document.getElementById(\"servo_12\").value = \"0\";";
  content += "    document.getElementById(\"servo_11\").value = \"0\";";
  content += "    document.getElementById(\"servo_10\").value = \"0\";";
  content += "    document.getElementById(\"servo_9\").value = \"0\";";
  content += "    document.getElementById(\"servo_8\").value = \"0\";";
  content += "    document.getElementById(\"servo_7\").value = \"0\";";
  content += "    document.getElementById(\"servo_6\").value = \"0\";";
  content += "    document.getElementById(\"servo_5\").value = \"0\";";
  content += "    document.getElementById(\"servo_4\").value = \"0\";";
  content += "    document.getElementById(\"servo_3\").value = \"0\";";
  content += "    document.getElementById(\"servo_2\").value = \"0\";";
  content += "    document.getElementById(\"servo_1\").value = \"0\";";
  content += "    document.getElementById(\"servo_0\").value = \"0\";";
  content += "  }else{";
  content += "    value = document.getElementById(textId).value;";
  content += "   }";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\",\"save?key=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";
  server.send(200, "text/html", content);
}


/*============================================================================
  主控畫面
  ============================================================================*/
void handleIndex()
{
  String content = "";
  content += "<html>";

  content += "<head>";
  content += "  <title>MiniPlan Controller</title>";
  content += "  <meta charset=\"UTF-8\">";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += " font-size: 24px;";
  content += "background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += " </style>";
  content += "</head>";


  content += "<body>";
  content += "<table>";
  content += "<tr>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(3)\">TurnLeft</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(1)\">Forward</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(4)\">TurnRight</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(5)\">MoveLeft</button></td>";
  content += "<td><button  class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(99)\">STANDBY</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(6)\">MoveRight</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlPm(7)\">LeftKick</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(2)\">Backward</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlPm(8)\">RightKick</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(9)\">SkatingForward</button></td>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(10)\">SkatingBackward</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(11)\">GetUp</button></td>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(12)\">FaceDownGetUp</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(1)\">Bow</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(2)\">Waving</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(7)\">Clap Hands</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(3)\">Iron Man</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(4)\">Apache</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(5)\">Balance</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(6)\">Warm-Up</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(8)\">Dance</button></td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(9)\">Push-Up</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(10)\">TaiChi</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td colspan=\"2\"><center><button  class=\"pms_btn\" style=\"background: #04b404;\" type=\"button\" onclick=\"controlPms(99)\">Auto Demo</button></center></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td>\"" + ShowVoltage + "\"</td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td>\"" + FW_Version + "\"</td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td>\"" + Thanks_1 + "\"</td>";
  content += "</tr>";
  content += "<tr>";
  content += "<td>\"" + Thanks_2 + "\"</td>";
  content += "</tr>";
  content += "</table>";

  content += "</body>";
  content += "<script>";
  content += "function controlPm(id) {";
  content += "var xhttp = new XMLHttpRequest();";
  content += "xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";

  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+id, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlPms(id) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";

  content += " }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pms=\"+id, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "</script>";
  content += "</html>";

  server.send(200, "text/html", content);
}


/*============================================================================*/
void enableWebServer()
{
  HTTPMethod getMethod = HTTP_GET;

  server.on("/controller", getMethod, handleController);
  server.on("/save", getMethod, handleSave);

  server.on("/", getMethod, handleIndex);
  server.on("/editor", getMethod, handleEditor);
  server.on("/zero", getMethod, handleZero);
  server.on("/setting", getMethod, handleSetting);

  server.on("/online", getMethod, handleOnLine);
  server.on("/eeprom", getMethod, handleGetEEPROM);

  server.begin();
}


/*============================================================================*/
void setup(void) {

  Serial.begin(9600);
  Serial.println("MiniPlan V6 Start");


  // Engineering Model
  pinMode(12, OUTPUT);
  digitalWrite(12, LOW);
  delay(100);
  pinMode(12, INPUT);
  delay(100);
  Engineering_Model = digitalRead(12);
  if (Engineering_Model == 1) {
    Servo_PROGRAM = 100;
  }


  // Initialize I2C
  Wire.begin(4, 5);


  // Initialize I2C OLED
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);

  // Clear the buffer.
  display.clearDisplay();
  display.display();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, OLED_Display_Index);
  //display.println("MiniPlan V6 Start !");
  display.display();


  // AP SSID Name
  uint8_t mac[WL_MAC_ADDR_LENGTH];
  WiFi.softAPmacAddress(mac);
  String macID = String(mac[WL_MAC_ADDR_LENGTH - 2], HEX) +
                 String(mac[WL_MAC_ADDR_LENGTH - 1], HEX);
  macID.toUpperCase();

  String AP_NameString = "MiniPlan V6 - " + macID;

  char AP_NameChar[AP_NameString.length() + 1];
  memset(AP_NameChar, 0, AP_NameString.length() + 1);

  for (int i = 0; i < AP_NameString.length(); i++)
    AP_NameChar[i] = AP_NameString.charAt(i);

  WiFi.softAP(AP_NameChar, WiFiAPPSK);
  IPAddress myIP = WiFi.softAPIP();


  // EEPROM
  EEPROM.begin(512);
  delay(10);


  // PWM Servo Driver
  pwm.begin();
  Get_PWM_Frequency();
  pwm.setPWMFreq(Set_PWM_Freq);


  // Clear Input Voltage Low
  Input_Voltage_Low = 0;


  // Get_Voltage_Value
  Get_Voltage_Value();


  // Software PWM PIN
  GPIO12SERVO.attach(12);
  GPIO13SERVO.attach(13);
  GPIO14SERVO.attach(14);
  GPIO16SERVO.attach(16);


  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_1[Index] + (int8_t)EEPROM.read(Index);
  }


  // 連接偵測
  if (Engineering_Model == 0)
  {
    Serial.println("");
    Serial.println("MiniPlan V6 SSID : " + AP_NameString);
    Serial.println("MiniPlan V6 PW : 12345678");
    Serial.println("Please, connect !");

    display.println(AP_NameString);
    display.println("PW:12345678");
    display.println("Please, connect !");
    display.display();

    while (WiFi.softAPgetStationNum() == 0)
    {
      Serial.print(".");
      delay(500);
    }

    Serial.println("");
    Serial.println("Connected !");

    display.println("Connected !");
    display.display();
    OLED_Display_Index = 24;
  }


  // 網頁形成
  enableWebServer();
}



/*============================================================================*/
void loop(void) {

  // 網頁建構
  server.handleClient();


  // 基本動作
  if (Servo_PROGRAM >= 1 && Input_Voltage_Low == 0 )
  {

    Serial.print("Servo_PROGRAM = ");
    Serial.println(Servo_PROGRAM);

    OLED_Display_Index = OLED_Display_Index + 8;
    if (OLED_Display_Index > 56) {
      OLED_Display_Index = 0;
      display.clearDisplay();
    }
    display.setCursor(0, OLED_Display_Index);
    display.print("Servo_PROGRAM = ");
    display.println(Servo_PROGRAM);
    display.display();

    switch (Servo_PROGRAM)
    {
      case 1:  // 前進
        Servo_PROGRAM_Run(Servo_Prg_1, Servo_Prg_1_Step);
        Servo_PROGRAM_Center();
        break;
      case 2:  // 後退
        Servo_PROGRAM_Run(Servo_Prg_2, Servo_Prg_2_Step);
        Servo_PROGRAM_Center();
        break;
      case 3:  // 左轉
        Servo_PROGRAM_Run(Servo_Prg_3, Servo_Prg_3_Step);
        Servo_PROGRAM_Center();
        break;
      case 4:  // 右轉
        Servo_PROGRAM_Run(Servo_Prg_4, Servo_Prg_4_Step);
        Servo_PROGRAM_Center();
        break;
      case 5:  // 左橫移動作
        Servo_PROGRAM_Run(Servo_Prg_5, Servo_Prg_5_Step);
        Servo_PROGRAM_Center();
        break;
      case 6:  // 右橫移動作
        Servo_PROGRAM_Run(Servo_Prg_6, Servo_Prg_6_Step);
        Servo_PROGRAM_Center();
        break;
      case 7:  // 左踢
        Servo_PROGRAM_Run(Servo_Prg_7, Servo_Prg_7_Step);
        Servo_PROGRAM_Center();
        break;
      case 8:  // 右踢
        Servo_PROGRAM_Run(Servo_Prg_8, Servo_Prg_8_Step);
        Servo_PROGRAM_Center();
        break;
      case 9:  // 向前滑行
        Servo_PROGRAM_Run(Servo_Prg_9, Servo_Prg_9_Step);
        Servo_PROGRAM_Center();
        break;
      case 10: // 向後滑行
        Servo_PROGRAM_Run(Servo_Prg_10, Servo_Prg_10_Step);
        Servo_PROGRAM_Center();
        break;
      case 11: // 面朝上起立
        Servo_PROGRAM_Run(Servo_Prg_11, Servo_Prg_11_Step);
        Servo_PROGRAM_Center();
        break;
      case 12: // 面朝下起立
        Servo_PROGRAM_Run(Servo_Prg_12, Servo_Prg_12_Step);
        Servo_PROGRAM_Run(Servo_Prg_39_3, Servo_Prg_39_3_Step);
        Servo_PROGRAM_Center();
        break;
      case 99: // 待機
        Servo_PROGRAM_Center();
        delay(300);
        break;
      case 100:  // 達文西姿勢
        Servo_PROGRAM_Zero();
        delay(300);
        break;
    }
    Servo_PROGRAM = 0;
  }


  // 動作集
  if (Servo_PROGRAM_Stack >= 1 && Input_Voltage_Low == 0 )
  {

    Serial.print("Servo_PRGRAM_Stack = ");
    Serial.println(Servo_PROGRAM_Stack);

    OLED_Display_Index = OLED_Display_Index + 8;
    if (OLED_Display_Index > 56) {
      OLED_Display_Index = 0;
      display.clearDisplay();
    }
    display.setCursor(0, OLED_Display_Index);
    display.print("Servo_PRG_Stack = ");
    display.println(Servo_PROGRAM_Stack);
    display.display();

    switch (Servo_PROGRAM_Stack)
    {
      case 1:  // 鞠躬動作
        Servo_PROGRAM_Run(Servo_Prg_31, Servo_Prg_31_Step);
        Servo_PROGRAM_Center();
        break;
      case 2:  // 揮手動作
        Servo_PROGRAM_Run(Servo_Prg_32, Servo_Prg_32_Step);
        Servo_PROGRAM_Center();
        break;
      case 3:  // 鋼鐵人動作
        Servo_PROGRAM_Run(Servo_Prg_33, Servo_Prg_33_Step);
        Servo_PROGRAM_Center();
        break;
      case 4:  // 右邊單腳側傾動作
        Servo_PROGRAM_Run(Servo_Prg_34, Servo_Prg_34_Step);
        Servo_PROGRAM_Center();
        break;
      case 5:  // 左邊單腳平衡動作
        Servo_PROGRAM_Run(Servo_Prg_35, Servo_Prg_35_Step);
        Servo_PROGRAM_Center();
        break;
      case 6:  // 暖身動作
        Servo_PROGRAM_Run(Servo_Prg_36, Servo_Prg_36_Step);
        Servo_PROGRAM_Center();
        break;
      case 7:  // 拍手動作
        Servo_PROGRAM_Run(Servo_Prg_37, Servo_Prg_37_Step);
        Servo_PROGRAM_Center();
        break;
      case 8:  // 妖怪手錶動作
        Servo_PROGRAM_Run(Servo_Prg_38, Servo_Prg_38_Step);
        Servo_PROGRAM_Center();
        break;
      case 9:  // 伏地挺身動作
        Servo_PROGRAM_Run(Servo_Prg_39_1, Servo_Prg_39_1_Step);
        Servo_PROGRAM_Run(Servo_Prg_39_2, Servo_Prg_39_2_Step);
        Servo_PROGRAM_Run(Servo_Prg_39_2, Servo_Prg_39_2_Step);
        Servo_PROGRAM_Run(Servo_Prg_39_2, Servo_Prg_39_2_Step);
        Servo_PROGRAM_Run(Servo_Prg_39_3, Servo_Prg_39_3_Step);
        Servo_PROGRAM_Center();
        break;
      case 10: // 太極拳動作
        Servo_PROGRAM_Run(Servo_Prg_40, Servo_Prg_40_Step);
        Servo_PROGRAM_Center();
        break;
      case 99:  // 動作 AUTO DEMO
        Servo_PROGRAM_Run(Servo_Prg_32, Servo_Prg_32_Step);
        Servo_PROGRAM_Center();
        delay(500);
        Servo_PROGRAM_Run(Servo_Prg_36, Servo_Prg_36_Step);
        Servo_PROGRAM_Center();
        delay(500);
        Servo_PROGRAM_Run(Servo_Prg_34, Servo_Prg_34_Step);
        Servo_PROGRAM_Center();
        delay(500);
        Servo_PROGRAM_Run(Servo_Prg_35, Servo_Prg_35_Step);
        Servo_PROGRAM_Center();
        delay(500);
        Servo_PROGRAM_Run(Servo_Prg_37, Servo_Prg_37_Step);
        Servo_PROGRAM_Center();
        delay(500);
        Servo_PROGRAM_Run(Servo_Prg_31, Servo_Prg_31_Step);
        Servo_PROGRAM_Center();
        break;
    }
    Servo_PROGRAM_Stack = 0;
  }


  // 電壓偵測
  if (Voltage_Conter >= 30000)
  {
    Voltage = (Voltage + map(analogRead(A0), 0, 1025, 0, Set_Voltage)) / 2;

    char buffer[20];
    itoa(Voltage, buffer, 10);
    if (Input_Voltage_Low == 1 )
    {
      ShowVoltage = "Battery Low !";
    }
    else
    {
      ShowVoltage = "Voltage Value = ";
      ShowVoltage = ShowVoltage + buffer;
    }

    Serial.print("Real VoltageValue = ");
    Serial.print(analogRead(A0));
    if (Input_Voltage_Low == 1 )
    {
      Serial.println(", Calc Value = Battery Low");
    }
    else
    {
      Serial.print(", Calc Value = ");
      Serial.println(Voltage);
    }

    OLED_Display_Index = OLED_Display_Index + 8;
    if (OLED_Display_Index > 56) {
      OLED_Display_Index = 0;
      display.clearDisplay();
    }
    display.setCursor(0, OLED_Display_Index);
    display.print("Voltage Value = ");
    display.println(Voltage);
    display.display();

    // 自動校正電壓誤差
    if (Engineering_Model == 1)
    {
      if (Voltage >= 601) {
        GPIO12SERVO.write(120);

        Voltage_Cab--;
        writeKeyValue(22, Voltage_Cab);
        Set_Voltage = Input_Voltage + Voltage_Cab;
      }
      else if (Voltage <= 599) {
        GPIO12SERVO.write(60);

        Voltage_Cab++;
        writeKeyValue(22, Voltage_Cab);
        Set_Voltage = Input_Voltage + Voltage_Cab;
      }
      else {
        GPIO12SERVO.write(90);
      }
    }
    else
    {
      if (Voltage <= Input_MinVoltage)
      {
        // 低壓禁止動作
        //Input_Voltage_Low = 1;
      }
    }

    Voltage_Conter = 0;
  }
  else {
    Voltage_Conter++;
  }


  // 連接偵測
  if (WiFi.softAPgetStationNum() == 0)
  {
    Serial.println("Disconnect !");

    OLED_Display_Index = OLED_Display_Index + 8;
    if (OLED_Display_Index > 56) {
      OLED_Display_Index = 0;
      display.clearDisplay();
    }
    display.setCursor(0, OLED_Display_Index);
    display.println("Disconnect !");
    display.display();

    while (WiFi.softAPgetStationNum() == 0)
    {
      delay(200);
    }

    Serial.println("");
    Serial.println("Connected !");
  }


}
